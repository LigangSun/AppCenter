<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" 
	                xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" 
                    xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
                    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
                    xmlns:ap="clr-namespace:SoonLearning.AppCenter"
                    xmlns:sys="clr-namespace:System;assembly=mscorlib"
                    xmlns:win="clr-namespace:System.Windows;assembly=PresentationFramework"
                    xmlns:data="clr-namespace:SoonLearning.AppCenter.Data;assembly=SoonLearning.AppCenter.Common"
                    xmlns:commCtrl="clr-namespace:SoonLearning.AppCenter.Controls;assembly=SoonLearning.AppCenter.Common"
                    xmlns:convert="clr-namespace:SoonLearning.AppCenter.Converter;assembly=SoonLearning.AppCenter.Common"
                    xmlns:Microsoft_Windows_Themes="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero" 
                    mc:Ignorable="d">
	<!-- Resource dictionary entries should be defined here. -->

	<Style x:Key="ButtonStyle_Normal" TargetType="{x:Type Button}">
		<Setter Property="BorderThickness" Value="1"/>
		<Setter Property="Foreground" Value="{StaticResource TextColorBrush_Light}"/>
		<Setter Property="HorizontalContentAlignment" Value="Center"/>
		<Setter Property="VerticalContentAlignment" Value="Center"/>
		<Setter Property="Padding" Value="1"/>
		<Setter Property="FontSize" Value="18"/>
		<Setter Property="FontWeight" Value="Medium" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Button}">
					<ControlTemplate.Resources>
						<Storyboard x:Key="Storyboard1"/>
						<Storyboard x:Key="Storyboard2"/>
					</ControlTemplate.Resources>
					<Grid Width="Auto" Height="Auto" x:Name="Button_Normal">
                        <Border x:Name="border" BorderBrush="{StaticResource Brush_ButtonBorder}" CornerRadius="6" BorderThickness="1" d:LayoutOverrides="Width, Height" Background="{StaticResource Brush_ButtonN}"/>
                        <Border x:Name="border_H" BorderBrush="{StaticResource Brush_ButtonBorder}" CornerRadius="6" BorderThickness="1" d:LayoutOverrides="Width, Height" Visibility="Hidden" Background="{StaticResource Brush_ButtonH}"/>
                        <Border x:Name="border_D" BorderBrush="{StaticResource Brush_ButtonBorder}" CornerRadius="6" BorderThickness="1" d:LayoutOverrides="Width, Height" Visibility="Hidden" Background="{StaticResource Brush_ButtonD}"/>
						<TextBlock x:Name="contentPresenter" 
							       HorizontalAlignment="Center" 
							       VerticalAlignment="Center" 
							       RenderTransformOrigin="0.5,0.5"
                                   TextAlignment="Center"
							       Margin="3,0,3,0"
							       Text="{TemplateBinding Property=Content}"
							       MaxWidth="{TemplateBinding Width}"/>
					</Grid>
					<ControlTemplate.Triggers>
						<Trigger Property="IsPressed" Value="True">
							<Setter Property="RenderTransform" TargetName="contentPresenter">
								<Setter.Value>
									<TransformGroup>
										<ScaleTransform/>
										<SkewTransform/>
										<RotateTransform/>
										<TranslateTransform X="0" Y="1"/>
									</TransformGroup>
								</Setter.Value>
							</Setter>
							<Setter Property="Visibility" TargetName="border_D" Value="Visible"/>
						</Trigger>
						<Trigger Property="IsMouseOver" Value="True">
							<Setter Property="Visibility" TargetName="border_H" Value="Visible"/>
						</Trigger>
						<Trigger Property="IsKeyboardFocused" Value="true"/>
						<Trigger Property="ToggleButton.IsChecked" Value="true"/>
						<Trigger Property="IsEnabled" Value="false">
							<Setter Property="Opacity" TargetName="Button_Normal" Value="0.3"/>
						</Trigger>
						<!--<Trigger Property="IsTextTrimmed" SourceName="contentPresenter" Value="True">
                            <Setter Property="ToolTip">
                                <Setter.Value>
                                    <Binding ElementName="contentPresenter" Path="Text" />
                                </Setter.Value>
                            </Setter>
                        </Trigger>-->
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

    <Style x:Key="ButtonFocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Rectangle Stroke="{StaticResource titleTextHighlightColorBrush}" StrokeDashArray="2 1" StrokeThickness="2" Margin="2" SnapsToDevicePixels="true"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="CheckRadioFocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Rectangle Stroke="{StaticResource titleTextHighlightColorBrush}" StrokeDashArray="2 1" StrokeThickness="2" Margin="0,0,0,0" SnapsToDevicePixels="true"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <Style TargetType="{x:Type Button}">
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Foreground" Value="{StaticResource TextColorBrush_Dim}"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Padding" Value="1"/>
        <Setter Property="FontSize" Value="16"/>
        <Setter Property="FontWeight" Value="Bold" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <ControlTemplate.Resources>
                        <Storyboard x:Key="Storyboard1"/>
                        <Storyboard x:Key="Storyboard2"/>
                    </ControlTemplate.Resources>
                    <Grid Width="Auto" Height="65" x:Name="Button_Normal">

                        <Grid.Effect>
                    			<DropShadowEffect ShadowDepth="2" Direction="270" Opacity="0.4"/>
                        </Grid.Effect>
                        <Border x:Name="border" CornerRadius="26" BorderThickness="3" d:LayoutOverrides="Width, Height" Background="{StaticResource Brush_ButtonN}" Margin="0,0,0,5">
                        	<Border.BorderBrush>
                        		<LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                        			<GradientStop Color="#FFD4FEA5" Offset="0"/>
                        			<GradientStop Color="#FF058226" Offset="1"/>
                        		</LinearGradientBrush>
                        	</Border.BorderBrush>
                        </Border>
                        <Border x:Name="border_H" CornerRadius="26" BorderThickness="3" d:LayoutOverrides="Width, Height" Visibility="Hidden" Background="{StaticResource Brush_ButtonH}" Margin="0,0,0,5"/>
                        <Border x:Name="border_D" CornerRadius="26" BorderThickness="3" d:LayoutOverrides="Width, Height" Visibility="Hidden" Background="{StaticResource Brush_ButtonD}" Margin="0,0,0,5"/>
                        <TextBlock x:Name="contentPresenter" 
                        	       HorizontalAlignment="Center" 
                        	       VerticalAlignment="Center" 
                        	       RenderTransformOrigin="0.5,0.5"
                        	       Text="{TemplateBinding Property=Content}" Style="{StaticResource TextBlockStyle_Head1}" Foreground="{StaticResource TextColorBrush_Light}"
                        	       MaxWidth="{TemplateBinding Width}" FontWeight="Bold" Margin="40,0,40,4" d:LayoutOverrides="Width">

                        	<TextBlock.Effect>
                        		<DropShadowEffect ShadowDepth="2" Direction="85" Opacity="0.4" Color="#036703"/>
                        	</TextBlock.Effect>
                        </TextBlock>
                    	<Ellipse x:Name="ellipse" Fill="#7FF4F4F5" HorizontalAlignment="Left" Height="16" Margin="15,0,0,0" Stroke="{x:Null}" VerticalAlignment="Top" Width="12" RenderTransformOrigin="0.5,0.5">
                    		<Ellipse.RenderTransform>
                    			<TransformGroup>
                    				<ScaleTransform/>
                    				<SkewTransform/>
                    				<RotateTransform Angle="56.954"/>
                    				<TranslateTransform/>
                    			</TransformGroup>
                    		</Ellipse.RenderTransform>
                    	</Ellipse>
						
						
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="RenderTransform" TargetName="contentPresenter">
                                <Setter.Value>
                                    <TransformGroup>
                                        <ScaleTransform/>
                                        <SkewTransform/>
                                        <RotateTransform/>
                                        <TranslateTransform X="0" Y="1"/>
                                    </TransformGroup>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="Visibility" TargetName="border_D" Value="Visible"/>
                            <Setter Property="Visibility" TargetName="ellipse" Value="Hidden"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Visibility" TargetName="border_H" Value="Visible"/>
                        </Trigger>
                        <Trigger Property="IsKeyboardFocused" Value="true"/>
                        <Trigger Property="ToggleButton.IsChecked" Value="true"/>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Opacity" TargetName="Button_Normal" Value="0.3"/>
                        </Trigger>
                        <!--<Trigger Property="IsTextTrimmed" SourceName="contentPresenter" Value="True">
                            <Setter Property="ToolTip">
                                <Setter.Value>
                                    <Binding ElementName="contentPresenter" Path="Text" />
                                </Setter.Value>
                            </Setter>
                        </Trigger>-->
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="imageTextButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Foreground" Value="{StaticResource TextColorBrush_Light}"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Padding" Value="1"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <ControlTemplate.Resources>
                        <Storyboard x:Key="Storyboard1">
                            <ColorAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="border" Storyboard.TargetProperty="(Panel.Background).(GradientBrush.GradientStops)[0].(GradientStop.Color)">
                                <SplineColorKeyFrame KeyTime="00:00:00.2000000" Value="#66FFFFFF"/>
                            </ColorAnimationUsingKeyFrames>
                            <ColorAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="border" Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)">
                                <SplineColorKeyFrame KeyTime="00:00:00.2000000" Value="White"/>
                            </ColorAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="Storyboard2">
                            <ColorAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="border" Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)">
                                <SplineColorKeyFrame KeyTime="00:00:00.2000000" Value="#7FFFFFFF"/>
                            </ColorAnimationUsingKeyFrames>
                            <ColorAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="border" Storyboard.TargetProperty="(Panel.Background).(GradientBrush.GradientStops)[0].(GradientStop.Color)">
                                <SplineColorKeyFrame KeyTime="00:00:00.2000000" Value="#33FFFFFF"/>
                            </ColorAnimationUsingKeyFrames>
                        </Storyboard>
                    </ControlTemplate.Resources>
                    <Grid Width="Auto" Height="Auto" x:Name="Button_Normal">
                        <Border x:Name="border" BorderBrush="#7FFFFFFF" CornerRadius="2" BorderThickness="1" d:LayoutOverrides="Width, Height">
                            <Border.Background>
                                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                    <GradientStop Color="#33FFFFFF" Offset="0.009"/>
                                    <GradientStop Offset="1"/>
                                </LinearGradientBrush>
                            </Border.Background>
                        </Border>
                        <StackPanel Orientation="Horizontal"
                                    HorizontalAlignment="Center">
                            <ContentPresenter x:Name="imagePresenter" 
                                              Opacity="1" 
                                              HorizontalAlignment="Center"
                                              VerticalAlignment="Center"
                                              RenderTransformOrigin="0.5,0.5">
                            </ContentPresenter>
                            <TextBlock x:Name="contentPresenter" 
                                        HorizontalAlignment="Center" 
                                        VerticalAlignment="Center" 
                                        RenderTransformOrigin="0.5,0.5"
                                        Margin="3,0,3,0"
                                        Text="{TemplateBinding Property=Content}"
                                        MaxWidth="{TemplateBinding Width}">

                            </TextBlock>
                        </StackPanel>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="RenderTransform" TargetName="contentPresenter">
                                <Setter.Value>
                                    <TransformGroup>
                                        <ScaleTransform/>
                                        <SkewTransform/>
                                        <RotateTransform/>
                                        <TranslateTransform X="0" Y="1"/>
                                    </TransformGroup>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard Storyboard="{StaticResource Storyboard1}"/>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard x:Name="Storyboard2_BeginStoryboard" Storyboard="{StaticResource Storyboard2}"/>
                            </Trigger.ExitActions>
                        </Trigger>
                        <Trigger Property="IsKeyboardFocused" Value="true"/>
                        <Trigger Property="ToggleButton.IsChecked" Value="true"/>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Opacity" TargetName="Button_Normal" Value="0.3"/>
                        </Trigger>
                        <!--<Trigger Property="IsTextTrimmed" SourceName="contentPresenter" Value="True">
                            <Setter Property="ToolTip">
                                <Setter.Value>
                                    <Binding ElementName="contentPresenter" Path="Text" />
                                </Setter.Value>
                            </Setter>
                        </Trigger>-->
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="contentButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Foreground" Value="Black"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Padding" Value="1"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <ControlTemplate.Resources>
                        <Storyboard x:Key="Storyboard1"/>
                        <Storyboard x:Key="Storyboard2"/>
                    </ControlTemplate.Resources>
                    <Grid Width="Auto" Height="Auto" x:Name="Button_Normal">
                        <Border x:Name="border" BorderBrush="{StaticResource Brush_ButtonBorder}" CornerRadius="3" BorderThickness="1" d:LayoutOverrides="Width, Height" Background="{StaticResource Brush_ButtonU3}"/>
                        <Border x:Name="border_H" CornerRadius="3" BorderThickness="1" Background="{StaticResource Brush_ButtonH3}" d:LayoutOverrides="Width, Height" Visibility="Hidden"/>
                        <Border x:Name="border_D" CornerRadius="3" BorderThickness="1" Background="{StaticResource Brush_ButtonD3}" Visibility="Hidden" d:LayoutOverrides="Width, Height"/>
                        <ContentPresenter x:Name="contentPresenter" 
                                HorizontalAlignment="Center" 
                                VerticalAlignment="Center" 
                                RenderTransformOrigin="0.5,0.5"
                                Margin="3,0,3,0"
                                MaxWidth="{TemplateBinding Width}">
                            <ContentPresenter.Effect>
								<DropShadowEffect ShadowDepth="1" Direction="270" Opacity="0.4" Color="White"/>
							</ContentPresenter.Effect> 
                        </ContentPresenter>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="RenderTransform" TargetName="contentPresenter">
                                <Setter.Value>
                                    <TransformGroup>
                                        <ScaleTransform/>
                                        <SkewTransform/>
                                        <RotateTransform/>
                                        <TranslateTransform X="0" Y="1"/>
                                    </TransformGroup>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="Visibility" TargetName="border_D" Value="Visible"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                        	<Setter Property="Visibility" TargetName="border_H" Value="Visible"/>
                        </Trigger>
                        <Trigger Property="IsKeyboardFocused" Value="true"/>
                        <Trigger Property="ToggleButton.IsChecked" Value="true"/>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Opacity" TargetName="Button_Normal" Value="0.3"/>
                        </Trigger>
                        <!--<Trigger Property="IsTextTrimmed" SourceName="contentPresenter" Value="True">
                            <Setter Property="ToolTip">
                                <Setter.Value>
                                    <Binding ElementName="contentPresenter" Path="Text" />
                                </Setter.Value>
                            </Setter>
                        </Trigger>-->
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="arrow_Button" TargetType="{x:Type RepeatButton}">
        <Setter Property="FocusVisualStyle" Value="{StaticResource ButtonFocusVisual}"/>
        <Setter Property="Background" Value="{StaticResource ButtonNormalBackground}"/>
        <Setter Property="BorderBrush" Value="{StaticResource ButtonNormalBorder}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Foreground" Value="{StaticResource TextColorBrush_Light}"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Padding" Value="1"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Grid>
                        <ScrollContentPresenter x:Name="scrollContentPresenter" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Margin="0"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Opacity" TargetName="scrollContentPresenter" Value="1"/>
                        </Trigger>
                        <Trigger Property="IsKeyboardFocused" Value="true"/>
                        <Trigger Property="ToggleButton.IsChecked" Value="true"/>
                        <Trigger Property="IsPressed" Value="False">
                            <Setter Property="Margin" TargetName="scrollContentPresenter" Value="0,-1,0,1"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{StaticResource TextColorBrush_Light}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <Style x:Key="IconButton" TargetType="{x:Type Button}">
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Foreground" Value="{StaticResource TextColorBrush_Light}"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Padding" Value="1"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <ControlTemplate.Resources>
                        <Storyboard x:Key="Storyboard1">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="contentPresenter" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.2000000" Value="1.1"/>
                            </DoubleAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="contentPresenter" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.2000000" Value="1.1"/>
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="Storyboard2">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="contentPresenter" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.2000000" Value="1.0"/>
                            </DoubleAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="contentPresenter" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.2000000" Value="1.0"/>
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                    </ControlTemplate.Resources>
                    <Grid Background="#00000000" Width="Auto" Height="Auto">
                        <ContentPresenter x:Name="contentPresenter" 
                                          Opacity="1" 
                                          Margin="1"
                                          RenderTransformOrigin="0.5,0.5">
                            <ContentPresenter.RenderTransform>
                                <TransformGroup>
                                    <ScaleTransform ScaleX="1" ScaleY="1"/>
                                    <SkewTransform/>
                                    <RotateTransform/>
                                    <TranslateTransform/>
                                </TransformGroup>
                            </ContentPresenter.RenderTransform>
							
							
						    <ContentPresenter.Effect>
                                <BlurEffect Radius="36"/>
                            </ContentPresenter.Effect>
					
							
						</ContentPresenter>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True"/>
                        <Trigger Property="IsKeyboardFocused" Value="true"/>
                        <Trigger Property="ToggleButton.IsChecked" Value="true"/>
                        <Trigger Property="IsPressed" Value="True">
                        	<Setter Property="RenderTransform" TargetName="contentPresenter">
                        		<Setter.Value>
                        			<TransformGroup>
                        				<ScaleTransform ScaleY="1" ScaleX="1"/>
                        				<SkewTransform/>
                        				<RotateTransform/>
                        				<TranslateTransform Y="1"/>
                        			</TransformGroup>
                        		</Setter.Value>
                        	</Setter>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="#ADADAD"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <Style x:Key="ButtonStyle_IconBtn" TargetType="{x:Type Button}">
    	<Setter Property="BorderThickness" Value="1"/>
    	<Setter Property="Foreground" Value="{StaticResource TextColorBrush_Light}"/>
    	<Setter Property="HorizontalContentAlignment" Value="Center"/>
    	<Setter Property="VerticalContentAlignment" Value="Center"/>
    	<Setter Property="Padding" Value="1"/>
    	<Setter Property="FontSize" Value="14"/>
    	<Setter Property="FontWeight" Value="Medium" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
    	<Setter Property="Template">
    		<Setter.Value>
    			<ControlTemplate TargetType="{x:Type Button}">
    				<ControlTemplate.Resources>
    					<Storyboard x:Key="Storyboard1"/>
    					<Storyboard x:Key="Storyboard2"/>
    				</ControlTemplate.Resources>
    				<Grid Width="Auto" Height="60" x:Name="Button_Normal">
    					<Grid.ColumnDefinitions>
    						<ColumnDefinition Width="65"/>
    						<ColumnDefinition/>
    					</Grid.ColumnDefinitions>
						
						
					    <Grid.Effect>
    						<DropShadowEffect ShadowDepth="2" Direction="270" Opacity="0.4"/>
                        </Grid.Effect>
						
                        <Border x:Name="border" CornerRadius="26" BorderThickness="3" Background="{StaticResource Brush_ButtonN2}" Grid.ColumnSpan="2" d:LayoutOverrides="Width, Height">
    						<Border.BorderBrush>
    							<LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
    								<GradientStop Color="#FFBDF8FD"/>
    								<GradientStop Color="#FF036AA0" Offset="1"/>
    							</LinearGradientBrush>
    						</Border.BorderBrush>
    					</Border>
    					<Border x:Name="border_H_Copy" CornerRadius="26" BorderThickness="3" Visibility="Hidden" Background="{StaticResource Brush_ButtonH2}" Grid.ColumnSpan="2" d:LayoutOverrides="Width, Height"/>
    					<Border x:Name="border_D_Copy" CornerRadius="26" BorderThickness="3" Visibility="Hidden" Background="{StaticResource Brush_ButtonD2}" Grid.ColumnSpan="2" d:LayoutOverrides="Width, Height"/>
    					<TextBlock x:Name="contentPresenter" 
    						HorizontalAlignment="Left" 
    						VerticalAlignment="Center" 
    						RenderTransformOrigin="0.5,0.5" Style="{StaticResource TextBlockStyle_Head2_NoShadow}" Foreground="White"
    						MaxWidth="{TemplateBinding Width}" Grid.Column="1" d:LayoutOverrides="Height" Margin="15,0,20,0" Text="{TemplateBinding Content}">
    						<TextBlock.RenderTransform>
    							<TransformGroup>
    								<ScaleTransform/>
    								<SkewTransform/>
    								<RotateTransform/>
    								<TranslateTransform/>
    							</TransformGroup>
    						</TextBlock.RenderTransform>
							
						<TextBlock.Effect>
    						<DropShadowEffect ShadowDepth="1" Direction="90" Opacity="0.4"/>
    					</TextBlock.Effect>
							
							
							</TextBlock>
    					<ContentPresenter x:Name="contentPresenter1" Grid.ColumnSpan="1" HorizontalAlignment="Right" VerticalAlignment="Center" RenderTransformOrigin="0.5,0.5" Width="Auto" Height="Auto">
    						<ContentPresenter.RenderTransform>
    							<TransformGroup>
    								<ScaleTransform/>
    								<SkewTransform/>
    								<RotateTransform/>
    								<TranslateTransform/>
    							</TransformGroup>
    						</ContentPresenter.RenderTransform>
							
							<ContentPresenter.Effect>
    						    <DropShadowEffect ShadowDepth="1" Direction="90" Opacity="0.4"/>
                            </ContentPresenter.Effect>
							
    					</ContentPresenter>
    					<Ellipse x:Name="ellipse" Fill="#7FF4F4F5" HorizontalAlignment="Left" Height="16" Margin="7,5,0,0" Stroke="{x:Null}" VerticalAlignment="Top" Width="12" RenderTransformOrigin="0.5,0.5">
    						<Ellipse.RenderTransform>
    							<TransformGroup>
    								<ScaleTransform/>
    								<SkewTransform/>
    								<RotateTransform Angle="56.954"/>
    								<TranslateTransform/>
    							</TransformGroup>
    						</Ellipse.RenderTransform>
    					</Ellipse>
    				</Grid>
    				<ControlTemplate.Triggers>
    					<Trigger Property="IsPressed" Value="True">
    						<Setter Property="RenderTransform" TargetName="contentPresenter">
    							<Setter.Value>
    								<TransformGroup>
    									<ScaleTransform/>
    									<SkewTransform/>
    									<RotateTransform/>
    									<TranslateTransform X="0" Y="1"/>
    								</TransformGroup>
    							</Setter.Value>
    						</Setter>
    						<Setter Property="RenderTransform" TargetName="contentPresenter1">
    							<Setter.Value>
    								<TransformGroup>
    									<ScaleTransform/>
    									<SkewTransform/>
    									<RotateTransform/>
    									<TranslateTransform Y="1"/>
    								</TransformGroup>
    							</Setter.Value>
    						</Setter>
    					</Trigger>
    					<Trigger Property="IsKeyboardFocused" Value="true"/>
    					<Trigger Property="ToggleButton.IsChecked" Value="true"/>
    					<Trigger Property="IsEnabled" Value="false">
    						<Setter Property="Opacity" TargetName="Button_Normal" Value="0.3"/>
    					</Trigger>
    					<!--<Trigger Property="IsTextTrimmed" SourceName="contentPresenter" Value="True">
                            <Setter Property="ToolTip">
                                <Setter.Value>
                                    <Binding ElementName="contentPresenter" Path="Text" />
                                </Setter.Value>
                            </Setter>
                        </Trigger>-->
    				</ControlTemplate.Triggers>
    			</ControlTemplate>
    		</Setter.Value>
    	</Setter>
    </Style>
    
	
	
	<Style x:Key="ButtonStyle_IconStringButton" TargetType="{x:Type Button}">
    	<Setter Property="FontSize" Value="14"/>
		<Setter Property="BorderThickness" Value="1"/>
    	<Setter Property="Foreground" Value="{StaticResource BGMainBrush_Grey}"/>
    	<Setter Property="HorizontalContentAlignment" Value="Center"/>
    	<Setter Property="VerticalContentAlignment" Value="Center"/>
    	<Setter Property="Padding" Value="1"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
    	<Setter Property="Template">
    		<Setter.Value>
    			<ControlTemplate TargetType="{x:Type Button}">
    				<ControlTemplate.Resources>
    					<Storyboard x:Key="Storyboard1">
    						<DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="contentPresenter" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)">
    							<SplineDoubleKeyFrame KeyTime="00:00:00.2000000" Value="1.1"/>
    						</DoubleAnimationUsingKeyFrames>
    						<DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="contentPresenter" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)">
    							<SplineDoubleKeyFrame KeyTime="00:00:00.2000000" Value="1.1"/>
    						</DoubleAnimationUsingKeyFrames>
    					</Storyboard>
    					<Storyboard x:Key="Storyboard2">
    						<DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="contentPresenter" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)">
    							<SplineDoubleKeyFrame KeyTime="00:00:00.2000000" Value="1.0"/>
    						</DoubleAnimationUsingKeyFrames>
    						<DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="contentPresenter" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)">
    							<SplineDoubleKeyFrame KeyTime="00:00:00.2000000" Value="1.0"/>
    						</DoubleAnimationUsingKeyFrames>
    					</Storyboard>
    				</ControlTemplate.Resources>
    				<Grid Background="#00000000" Width="Auto" Height="Auto">
    					<Grid.RowDefinitions>
    						<RowDefinition Height="68"/>
    						<RowDefinition Height="*"/>
    					</Grid.RowDefinitions>
    					<Border BorderBrush="#99FFFFFF" BorderThickness="1" Margin="0" Grid.RowSpan="1" CornerRadius="8" Width="68" Height="68"/>
                        <Border x:Name="border" BorderBrush="{x:Null}" BorderThickness="1" Grid.RowSpan="1" CornerRadius="8" Width="68" Height="68" Background="{StaticResource Brush_TitleBG}" Visibility="Hidden"/>
    					<ContentPresenter x:Name="contentPresenter" Opacity="0.7" RenderTransformOrigin="0.5,0.5" Grid.RowSpan="1" Width="Auto" Height="Auto" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="4">
    						<ContentPresenter.RenderTransform>
    							<TransformGroup>
    								<ScaleTransform ScaleX="1" ScaleY="1"/>
    								<SkewTransform/>
    								<RotateTransform/>
    								<TranslateTransform/>
    							</TransformGroup>
    						</ContentPresenter.RenderTransform>
    					</ContentPresenter>
    					<ContentPresenter  Content="{TemplateBinding Content}" 
    						x:Name="contentPresenter_Copy" Opacity="1" RenderTransformOrigin="0.5,0.5" Grid.RowSpan="1" Grid.Row="1" HorizontalAlignment="Center" OpacityMask="{StaticResource BGMainBrush_Grey}"/>
    				</Grid>
    				<ControlTemplate.Triggers>
    					<Trigger Property="IsMouseOver" Value="True">
    						<Setter Property="Visibility" TargetName="border" Value="Visible"/>
    						<Setter Property="Opacity" TargetName="contentPresenter" Value="1"/>
    					</Trigger>
    					<Trigger Property="IsKeyboardFocused" Value="true"/>
    					<Trigger Property="ToggleButton.IsChecked" Value="true"/>
    					<Trigger Property="IsPressed" Value="True">
    						<Setter Property="Margin" TargetName="contentPresenter" Value="0,1,0,-1"/>
    					</Trigger>
    					<Trigger Property="IsEnabled" Value="false">
    						<Setter Property="Foreground" Value="#ADADAD"/>
    					</Trigger>
    				</ControlTemplate.Triggers>
    			</ControlTemplate>
    		</Setter.Value>
    	</Setter>
    </Style>
	<Style x:Key="ButtonStyle_Close" TargetType="{x:Type Button}">
		<Setter Property="BorderThickness" Value="1"/>
		<Setter Property="Foreground" Value="{StaticResource TextColorBrush_Light}"/>
		<Setter Property="HorizontalContentAlignment" Value="Center"/>
		<Setter Property="VerticalContentAlignment" Value="Center"/>
		<Setter Property="Padding" Value="1"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Button}">
					<ControlTemplate.Resources>
						<Storyboard x:Key="Storyboard1">
							<DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="contentPresenter" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)">
								<SplineDoubleKeyFrame KeyTime="00:00:00.2000000" Value="1.1"/>
							</DoubleAnimationUsingKeyFrames>
							<DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="contentPresenter" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)">
								<SplineDoubleKeyFrame KeyTime="00:00:00.2000000" Value="1.1"/>
							</DoubleAnimationUsingKeyFrames>
						</Storyboard>
						<Storyboard x:Key="Storyboard2">
							<DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="contentPresenter" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)">
								<SplineDoubleKeyFrame KeyTime="00:00:00.2000000" Value="1.0"/>
							</DoubleAnimationUsingKeyFrames>
							<DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="contentPresenter" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)">
								<SplineDoubleKeyFrame KeyTime="00:00:00.2000000" Value="1.0"/>
							</DoubleAnimationUsingKeyFrames>
						</Storyboard>
					</ControlTemplate.Resources>
					<Grid Background="#00000000" Width="Auto" Height="Auto">
                        <Border BorderBrush="{StaticResource Brush_ButtonBorder}" BorderThickness="0,0,0,1" CornerRadius="0,0,3,3" Background="{StaticResource Brush_ButtonN}"/>
						<ContentPresenter x:Name="contentPresenter" Opacity="1" RenderTransformOrigin="0.5,0.5" Margin="10">
							<ContentPresenter.RenderTransform>
								<TransformGroup>
									<ScaleTransform ScaleX="1" ScaleY="1"/>
									<SkewTransform/>
									<RotateTransform/>
									<TranslateTransform/>
								</TransformGroup>
							</ContentPresenter.RenderTransform>
						</ContentPresenter>
					</Grid>
					<ControlTemplate.Triggers>
						<Trigger Property="IsMouseOver" Value="True">
							<Trigger.EnterActions>
								<BeginStoryboard Storyboard="{StaticResource Storyboard1}"/>
							</Trigger.EnterActions>
							<Trigger.ExitActions>
								<BeginStoryboard x:Name="Storyboard2_BeginStoryboard" Storyboard="{StaticResource Storyboard2}"/>
							</Trigger.ExitActions>
						</Trigger>
						<Trigger Property="IsKeyboardFocused" Value="true"/>
						<Trigger Property="ToggleButton.IsChecked" Value="true"/>
						<Trigger Property="IsPressed" Value="True">
							<Setter Property="RenderTransform" TargetName="contentPresenter">
								<Setter.Value>
									<TransformGroup>
										<ScaleTransform ScaleY="1" ScaleX="1"/>
										<SkewTransform/>
										<RotateTransform/>
										<TranslateTransform Y="1"/>
									</TransformGroup>
								</Setter.Value>
							</Setter>
						</Trigger>
						<Trigger Property="IsEnabled" Value="false">
							<Setter Property="Foreground" Value="#ADADAD"/>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style x:Key="ButtonStyle_Sub" TargetType="{x:Type Button}">
		<Setter Property="BorderThickness" Value="1"/>
		<Setter Property="Foreground" Value="{StaticResource TextColorBrush_Dim}"/>
		<Setter Property="HorizontalContentAlignment" Value="Center"/>
		<Setter Property="VerticalContentAlignment" Value="Center"/>
		<Setter Property="Padding" Value="1"/>
		<Setter Property="FontSize" Value="14"/>
		<Setter Property="FontWeight" Value="Bold" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Button}">
					<ControlTemplate.Resources>
						<Storyboard x:Key="Storyboard1"/>
						<Storyboard x:Key="Storyboard2"/>
					</ControlTemplate.Resources>
					<Grid Width="Auto" Height="50" x:Name="Button_Normal">
						<Border x:Name="border_Copy1" CornerRadius="3" BorderThickness="0" Background="#4C000000" Margin="0" BorderBrush="{x:Null}" d:LayoutOverrides="Width, Height"/>


                        <Border x:Name="border" CornerRadius="3" BorderThickness="1" d:LayoutOverrides="Width, Height" Background="{StaticResource Brush_ButtonN2}" Margin="0,0,0,1" BorderBrush="#FF296E1F"/>
                        <Border x:Name="border_H" CornerRadius="3" BorderThickness="1" d:LayoutOverrides="Width, Height" Visibility="Hidden" Background="{StaticResource Brush_ButtonH2}" Margin="0,0,0,1"/>
						<Border x:Name="border_S" CornerRadius="2" BorderThickness="0,1,0,0" Visibility="Visible" d:LayoutOverrides="Width, Height" BorderBrush="#4CFFFFFF" Margin="1"/>
                        <Border x:Name="border_D" CornerRadius="3" BorderThickness="1,1,1,2" d:LayoutOverrides="Width, Height" Visibility="Hidden" Background="{StaticResource Brush_ButtonD2}"/>
                        <Border x:Name="border_Copy" CornerRadius="2" BorderThickness="1" d:LayoutOverrides="Width, Height" Margin="1" BorderBrush="{StaticResource Brush_Specular}" Visibility="Hidden"/>
						<TextBlock x:Name="contentPresenter" 
							HorizontalAlignment="Center" 
							VerticalAlignment="Center" 
							RenderTransformOrigin="0.5,0.5"
							Margin="3,0,3,0"
							Text="{TemplateBinding Property=Content}" Style="{StaticResource TextBlockStyle_Head1}" Foreground="{StaticResource TextColorBrush_Light}"
							MaxWidth="{TemplateBinding Width}" FontWeight="Bold">

							<!--	<TextBlock.BitmapEffect>
								<DropShadowBitmapEffect ShadowDepth="1" Softness="0" Direction="85" Opacity="0.4" Color="#FF4B1303"/>
							</TextBlock.BitmapEffect> -->
						</TextBlock>
						
						
					</Grid>
					<ControlTemplate.Triggers>
						<Trigger Property="IsPressed" Value="True">
							<Setter Property="RenderTransform" TargetName="contentPresenter">
								<Setter.Value>
									<TransformGroup>
										<ScaleTransform/>
										<SkewTransform/>
										<RotateTransform/>
										<TranslateTransform X="0" Y="1"/>
									</TransformGroup>
								</Setter.Value>
							</Setter>
							<Setter Property="Visibility" TargetName="border_D" Value="Visible"/>
						</Trigger>
						<Trigger Property="IsMouseOver" Value="True">
							<Setter Property="Visibility" TargetName="border_H" Value="Visible"/>
						</Trigger>
						<Trigger Property="IsKeyboardFocused" Value="true"/>
						<Trigger Property="ToggleButton.IsChecked" Value="true"/>
						<Trigger Property="IsEnabled" Value="false">
							<Setter Property="Opacity" TargetName="Button_Normal" Value="0.3"/>
						</Trigger>
						<!--<Trigger Property="IsTextTrimmed" SourceName="contentPresenter" Value="True">
                            <Setter Property="ToolTip">
                                <Setter.Value>
                                    <Binding ElementName="contentPresenter" Path="Text" />
                                </Setter.Value>
                            </Setter>
                        </Trigger>-->
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style x:Key="ButtonStyle_Sub2" TargetType="{x:Type Button}">
		<Setter Property="BorderThickness" Value="1"/>
		<Setter Property="Foreground" Value="Black"/>
		<Setter Property="HorizontalContentAlignment" Value="Center"/>
		<Setter Property="VerticalContentAlignment" Value="Center"/>
		<Setter Property="Padding" Value="1"/>
		<Setter Property="FontSize" Value="14"/>
		<Setter Property="FontWeight" Value="Bold" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Button}">
					<ControlTemplate.Resources>
						<Storyboard x:Key="Storyboard1"/>
						<Storyboard x:Key="Storyboard2"/>
					</ControlTemplate.Resources>
					<Grid Width="Auto" Height="Auto" x:Name="Button_Normal">
                        <Border x:Name="border" BorderBrush="{StaticResource Brush_ButtonBorder}" CornerRadius="3" BorderThickness="1" d:LayoutOverrides="Width, Height" Background="{StaticResource Brush_ButtonU3}"/>
                        <Border x:Name="border_H" CornerRadius="3" BorderThickness="1" d:LayoutOverrides="Width, Height" Visibility="Hidden" Background="{StaticResource Brush_ButtonH3}"/>
                        <Border x:Name="border_D" CornerRadius="3" BorderThickness="1" d:LayoutOverrides="Width, Height" Visibility="Hidden" Background="{StaticResource Brush_ButtonD3}"/>
						<ContentPresenter x:Name="contentPresenter" 
							              HorizontalAlignment="Center" 
							              VerticalAlignment="Center" 
							              RenderTransformOrigin="0.5,0.5"
							              Margin="3,0,3,0"
							              MaxWidth="{TemplateBinding Width}" >
                            <ContentPresenter.Effect>
								<DropShadowEffect ShadowDepth="1" Direction="270" Opacity="0.4" Color="White"/>
                            </ContentPresenter.Effect>
                        </ContentPresenter>
						
						
					</Grid>
					<ControlTemplate.Triggers>
						<Trigger Property="IsPressed" Value="True">
							<Setter Property="RenderTransform" TargetName="contentPresenter">
								<Setter.Value>
									<TransformGroup>
										<ScaleTransform/>
										<SkewTransform/>
										<RotateTransform/>
										<TranslateTransform X="0" Y="1"/>
									</TransformGroup>
								</Setter.Value>
							</Setter>
							<Setter Property="Visibility" TargetName="border_D" Value="Visible"/>
						</Trigger>
						<Trigger Property="IsMouseOver" Value="True">
							<Setter Property="Visibility" TargetName="border_H" Value="Visible"/>
						</Trigger>
						<Trigger Property="IsKeyboardFocused" Value="true"/>
						<Trigger Property="ToggleButton.IsChecked" Value="true"/>
						<Trigger Property="IsEnabled" Value="false">
							<Setter Property="Opacity" TargetName="Button_Normal" Value="0.3"/>
						</Trigger>
						<!--<Trigger Property="IsTextTrimmed" SourceName="contentPresenter" Value="True">
                            <Setter Property="ToolTip">
                                <Setter.Value>
                                    <Binding ElementName="contentPresenter" Path="Text" />
                                </Setter.Value>
                            </Setter>
                        </Trigger>-->
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

    <Style x:Key="ButtonStyle_Sub_Small" TargetType="{x:Type Button}">
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Foreground" Value="{StaticResource TextColorBrush_Dim}"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Padding" Value="1"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="FontWeight" Value="Normal" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <ControlTemplate.Resources>
                        <Storyboard x:Key="Storyboard1"/>
                        <Storyboard x:Key="Storyboard2"/>
                    </ControlTemplate.Resources>
                    <Grid Width="Auto" MinHeight="24" x:Name="Button_Normal">
                        <Border x:Name="border" BorderBrush="{StaticResource Brush_ButtonBorder}" CornerRadius="3" BorderThickness="0,0,0,1" d:LayoutOverrides="Width, Height" Background="{StaticResource Brush_ButtonN2}"/>
                        <Border x:Name="border_H" CornerRadius="3" BorderThickness="0,0,0,1" d:LayoutOverrides="Width, Height" Visibility="Hidden" Background="{StaticResource Brush_ButtonH2}"/>
                        <Border x:Name="border_D" CornerRadius="3" BorderThickness="0,0,0,1" d:LayoutOverrides="Width, Height" Visibility="Hidden" Background="{StaticResource Brush_ButtonD2}"/>
                        <Border x:Name="border_Copy" CornerRadius="2" BorderThickness="1" d:LayoutOverrides="Width, Height" Margin="1" BorderBrush="{StaticResource Brush_Specular}" Visibility="Hidden"/>
                        <TextBlock x:Name="contentPresenter" 
							        HorizontalAlignment="Center" 
							        VerticalAlignment="Center" 
							        RenderTransformOrigin="0.5,0.5"
							        Margin="3,0,3,0"
							        Text="{TemplateBinding Property=Content}" 
                                    Style="{StaticResource TextBlockStyle_Head1}" 
                                    Foreground="{StaticResource TextColorBrush_Light}"
							        MaxWidth="{TemplateBinding Width}" FontWeight="Normal">

							<TextBlock.Effect>
								<DropShadowEffect ShadowDepth="1" Direction="85" Opacity="0.4" Color="#FF4B1303"/>
							</TextBlock.Effect>
                        </TextBlock>


                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="RenderTransform" TargetName="contentPresenter">
                                <Setter.Value>
                                    <TransformGroup>
                                        <ScaleTransform/>
                                        <SkewTransform/>
                                        <RotateTransform/>
                                        <TranslateTransform X="0" Y="1"/>
                                    </TransformGroup>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="Visibility" TargetName="border_D" Value="Visible"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Visibility" TargetName="border_H" Value="Visible"/>
                        </Trigger>
                        <Trigger Property="IsKeyboardFocused" Value="true"/>
                        <Trigger Property="ToggleButton.IsChecked" Value="true"/>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Opacity" TargetName="Button_Normal" Value="0.3"/>
                        </Trigger>
                        <!--<Trigger Property="IsTextTrimmed" SourceName="contentPresenter" Value="True">
                            <Setter Property="ToolTip">
                                <Setter.Value>
                                    <Binding ElementName="contentPresenter" Path="Text" />
                                </Setter.Value>
                            </Setter>
                        </Trigger>-->
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="ButtonStyle_OrangeMulti" TargetType="{x:Type Button}">
    	<Setter Property="BorderThickness" Value="1"/>
    	<Setter Property="Foreground" Value="{StaticResource TextColorBrush_Dim}"/>
    	<Setter Property="HorizontalContentAlignment" Value="Center"/>
    	<Setter Property="VerticalContentAlignment" Value="Center"/>
    	<Setter Property="Padding" Value="1"/>
    	<Setter Property="FontSize" Value="16"/>
    	<Setter Property="FontWeight" Value="Bold" />
        <Setter Property="FontFamily" Value="/Resources/迷你简卡通.TTF#迷你简卡通"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
    	<Setter Property="Template">
    		<Setter.Value>
    			<ControlTemplate TargetType="{x:Type Button}">
    				<ControlTemplate.Resources>
    					<Storyboard x:Key="Storyboard1"/>
    					<Storyboard x:Key="Storyboard2"/>
    				</ControlTemplate.Resources>
    				<Grid Width="Auto" Height="50" x:Name="Button_Normal">
                    	
    					<Border x:Name="border_shadow" CornerRadius="3" Background="#4C000000" BorderBrush="{x:Null}" d:LayoutOverrides="Width, Height"/>


                        <Border x:Name="border" CornerRadius="3" BorderThickness="1" d:LayoutOverrides="Width, Height" Background="{StaticResource Brush_ButtonN}" Margin="0,0,0,1" BorderBrush="#FF993F00"/>
                        <Border x:Name="border_H" CornerRadius="3" BorderThickness="0,0,0,1" d:LayoutOverrides="Width, Height" Visibility="Hidden" Background="{StaticResource Brush_ButtonH}" Margin="1"/>
    					<Border x:Name="border_S" CornerRadius="2.5" BorderThickness="0,1,0,0" Visibility="Visible" Margin="1" d:LayoutOverrides="Width, Height" BorderBrush="#4CFFFFFF"/>
                        <Border x:Name="border_D" CornerRadius="3" BorderThickness="0,0,0,1" d:LayoutOverrides="Width, Height" Visibility="Hidden" Background="{StaticResource Brush_ButtonD}" Margin="0,0,0,1"/>
                        <Border x:Name="border_Copy" CornerRadius="2" BorderThickness="1" d:LayoutOverrides="Width, Height" Margin="1" BorderBrush="{StaticResource Brush_Specular}" Visibility="Hidden"/>
    					<StackPanel Orientation="Horizontal" d:LayoutOverrides="Height" Margin="20,0" VerticalAlignment="Center">
    						<TextBlock x:Name="contentPresenter" 
    							HorizontalAlignment="Center" 
    							VerticalAlignment="Center" 
    							RenderTransformOrigin="0.5,0.5"
    							Text="{TemplateBinding Property=Content}" Style="{StaticResource TextBlockStyle_Head1}" Foreground="{StaticResource TextColorBrush_Light}"
    							MaxWidth="{TemplateBinding Width}" FontWeight="Bold">

    							
    						</TextBlock>
    						<ContentPresenter Height="Auto" Margin="20,0,0,0"/>
						
						
    					</StackPanel>
						
						
    				</Grid>
    				<ControlTemplate.Triggers>
    					<Trigger Property="IsPressed" Value="True">
    						<Setter Property="RenderTransform" TargetName="contentPresenter">
    							<Setter.Value>
    								<TransformGroup>
    									<ScaleTransform/>
    									<SkewTransform/>
    									<RotateTransform/>
    									<TranslateTransform X="0" Y="1"/>
    								</TransformGroup>
    							</Setter.Value>
    						</Setter>
    						<Setter Property="Visibility" TargetName="border_D" Value="Visible"/>
    					</Trigger>
    					<Trigger Property="IsMouseOver" Value="True">
    						<Setter Property="Visibility" TargetName="border_H" Value="Visible"/>
    					</Trigger>
    					<Trigger Property="IsKeyboardFocused" Value="true"/>
    					<Trigger Property="ToggleButton.IsChecked" Value="true"/>
    					<Trigger Property="IsEnabled" Value="false">
    						<Setter Property="Opacity" TargetName="Button_Normal" Value="0.3"/>
    					</Trigger>
    					<!--<Trigger Property="IsTextTrimmed" SourceName="contentPresenter" Value="True">
                            <Setter Property="ToolTip">
                                <Setter.Value>
                                    <Binding ElementName="contentPresenter" Path="Text" />
                                </Setter.Value>
                            </Setter>
                        </Trigger>-->
    				</ControlTemplate.Triggers>
    			</ControlTemplate>
    		</Setter.Value>
    	</Setter>
    </Style>
    <Style x:Key="ButtonStyle_StringButton" TargetType="{x:Type Button}">
    	<Setter Property="BorderThickness" Value="1"/>
    	<Setter Property="Foreground" Value="#323232"/>
    	<Setter Property="HorizontalContentAlignment" Value="Center"/>
    	<Setter Property="VerticalContentAlignment" Value="Center"/>
    	<Setter Property="Padding" Value="1"/>
    	<Setter Property="FontSize" Value="16"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
    	<Setter Property="Template">
    		<Setter.Value>
    			<ControlTemplate TargetType="{x:Type Button}">
    				<ControlTemplate.Resources>
    					<Storyboard x:Key="Storyboard1"/>
    					<Storyboard x:Key="Storyboard2"/>
    				</ControlTemplate.Resources>
    				<Grid Width="Auto" Height="32" x:Name="Button_Normal">
						
						
    					<Border x:Name="border" BorderBrush="{x:Null}" HorizontalAlignment="Stretch" Width="Auto" Background="#FFEB7700" CornerRadius="4" Opacity="0"/>
						
						
    					<TextBlock x:Name="contentPresenter" 
    						HorizontalAlignment="Left" FontSize="16"
    						VerticalAlignment="Center" 
    						RenderTransformOrigin="0.5,0.5"
    						Text="{TemplateBinding Property=Content}" Style="{StaticResource TextBlockStyle_Head1}" Foreground="#FF323232"
    						MaxWidth="{TemplateBinding Width}"  Margin="35,0,20,0">

    						<!--<TextBlock.BitmapEffect>
                    			<DropShadowBitmapEffect ShadowDepth="1" Softness="0" Direction="85" Opacity="0.4" Color="#FF4B1303"/>
                    		</TextBlock.BitmapEffect> -->
    					</TextBlock>
						
						
    				</Grid>
    				<ControlTemplate.Triggers>
    					<Trigger Property="IsPressed" Value="True">
    						<Setter Property="RenderTransform" TargetName="contentPresenter">
    							<Setter.Value>
    								<TransformGroup>
    									<ScaleTransform/>
    									<SkewTransform/>
    									<RotateTransform/>
    									<TranslateTransform X="0" Y="1"/>
    								</TransformGroup>
    							</Setter.Value>
    						</Setter>
    						<Setter Property="Opacity" TargetName="border" Value="1"/>
    					</Trigger>
    					<Trigger Property="IsMouseOver" Value="True"/>
    					<Trigger Property="IsKeyboardFocused" Value="true"/>
    					<Trigger Property="ToggleButton.IsChecked" Value="true"/>
    					<Trigger Property="IsEnabled" Value="false">
    						<Setter Property="Opacity" TargetName="Button_Normal" Value="0.3"/>
    					</Trigger>
    					<!--<Trigger Property="IsTextTrimmed" SourceName="contentPresenter" Value="True">
                            <Setter Property="ToolTip">
                                <Setter.Value>
                                    <Binding ElementName="contentPresenter" Path="Text" />
                                </Setter.Value>
                            </Setter>
                        </Trigger>-->
    				</ControlTemplate.Triggers>
    			</ControlTemplate>
    		</Setter.Value>
    	</Setter>
    </Style>
    <Style x:Key="ButtonStyle_Exit" TargetType="{x:Type Button}">
    	<Setter Property="BorderThickness" Value="1"/>
    	<Setter Property="Foreground" Value="{StaticResource TextColorBrush_Light}"/>
    	<Setter Property="HorizontalContentAlignment" Value="Center"/>
    	<Setter Property="VerticalContentAlignment" Value="Center"/>
    	<Setter Property="Padding" Value="1"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
    	<Setter Property="Template">
    		<Setter.Value>
    			<ControlTemplate TargetType="{x:Type Button}">
    				<ControlTemplate.Resources>
    					<Storyboard x:Key="Storyboard1"/>
    					<Storyboard x:Key="Storyboard2"/>
    				</ControlTemplate.Resources>
    				<Grid Background="#00000000" Width="40" Height="40">

                        <Grid.Effect>
                            <DropShadowEffect ShadowDepth="2" Direction="270" Opacity="0.5" />
                        </Grid.Effect>

                        <Path x:Name="Rounded_Rectangle_1" Data="F1M33.564,12.393C32.8,12.393 32.036,12.686 31.454,13.272 31.454,13.272 25.072,19.687 25.072,19.687 25.072,19.687 18.822,13.405 18.822,13.405 17.667,12.243 15.793,12.243 14.638,13.405 14.638,13.405 12.545,15.508 12.545,15.508 11.39,16.669 11.39,18.552 12.545,19.714 12.545,19.714 18.795,25.996 18.795,25.996 18.795,25.996 12.459,32.364 12.459,32.364 11.294,33.535 11.294,35.435 12.459,36.607 12.459,36.607 14.57,38.728 14.57,38.728 15.735,39.899 17.625,39.899 18.791,38.728 18.791,38.728 25.126,32.36 25.126,32.36 25.126,32.36 31.376,38.642 31.376,38.642 32.532,39.803 34.405,39.803 35.561,38.642 35.561,38.642 37.653,36.538 37.653,36.538 38.809,35.377 38.809,33.494 37.653,32.332 37.653,32.332 31.403,26.051 31.403,26.051 31.403,26.051 37.785,19.636 37.785,19.636 38.951,18.464 38.951,16.565 37.785,15.393 37.785,15.393 35.675,13.272 35.675,13.272 35.092,12.686 34.328,12.393 33.564,12.393z M25.122,2C38.31,2 49,12.745 49,26 49,39.255 38.31,50 25.122,50 11.935,50 1.245,39.255 1.245,26 1.245,12.745 11.935,2 25.122,2z" Height="Auto" Width="Auto" Stretch="Fill">
    						<Path.Fill>
    							<LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
    								<GradientStop Color="#FFECF7FF" Offset="0"/>
    								<GradientStop Color="#FF83C1F0" Offset="1"/>
    							</LinearGradientBrush>
    						</Path.Fill>
    					</Path>
    					<Path x:Name="Rounded_Rectangle_1_Copy" Data="F1M33.564,12.393C32.8,12.393 32.036,12.686 31.454,13.272 31.454,13.272 25.072,19.687 25.072,19.687 25.072,19.687 18.822,13.405 18.822,13.405 17.667,12.243 15.793,12.243 14.638,13.405 14.638,13.405 12.545,15.508 12.545,15.508 11.39,16.669 11.39,18.552 12.545,19.714 12.545,19.714 18.795,25.996 18.795,25.996 18.795,25.996 12.459,32.364 12.459,32.364 11.294,33.535 11.294,35.435 12.459,36.607 12.459,36.607 14.57,38.728 14.57,38.728 15.735,39.899 17.625,39.899 18.791,38.728 18.791,38.728 25.126,32.36 25.126,32.36 25.126,32.36 31.376,38.642 31.376,38.642 32.532,39.803 34.405,39.803 35.561,38.642 35.561,38.642 37.653,36.538 37.653,36.538 38.809,35.377 38.809,33.494 37.653,32.332 37.653,32.332 31.403,26.051 31.403,26.051 31.403,26.051 37.785,19.636 37.785,19.636 38.951,18.464 38.951,16.565 37.785,15.393 37.785,15.393 35.675,13.272 35.675,13.272 35.092,12.686 34.328,12.393 33.564,12.393z M25.122,2C38.31,2 49,12.745 49,26 49,39.255 38.31,50 25.122,50 11.935,50 1.245,39.255 1.245,26 1.245,12.745 11.935,2 25.122,2z" Height="Auto" Width="Auto" Stretch="Fill" Opacity="0.8" Fill="{x:Null}">
    						<Path.Stroke>
    							<LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
    								<GradientStop Color="White" Offset="0"/>
    								<GradientStop Offset="0.365"/>
    							</LinearGradientBrush>
    						</Path.Stroke>
    					</Path>
    					<Image x:Name="image" Source="/SoonLearning.AppCenter;component/Resources/Images/Close_D.png" Stretch="Fill" Margin="-5" Visibility="Hidden"/>
    				</Grid>
    				<ControlTemplate.Triggers>
    					<Trigger Property="IsMouseOver" Value="True">
    						<Setter Property="Fill" TargetName="Rounded_Rectangle_1">
    							<Setter.Value>
    								<LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
    									<GradientStop Color="White" Offset="0"/>
    									<GradientStop Color="#FFB3DDFD" Offset="1"/>
    								</LinearGradientBrush>
    							</Setter.Value>
    						</Setter>
    					</Trigger>
    					<Trigger Property="IsKeyboardFocused" Value="true"/>
    					<Trigger Property="ToggleButton.IsChecked" Value="true"/>
    					<Trigger Property="IsPressed" Value="True">
    						<Setter Property="Visibility" TargetName="image" Value="Visible"/>
    					</Trigger>
    					<Trigger Property="IsEnabled" Value="false">
    						<Setter Property="Foreground" Value="#ADADAD"/>
    					</Trigger>
    				</ControlTemplate.Triggers>
    			</ControlTemplate>
    		</Setter.Value>
    	</Setter>
    </Style>
    <Style x:Key="ButtonStyle_Blue" TargetType="{x:Type Button}">
    	<Setter Property="BorderThickness" Value="1"/>
    	<Setter Property="Foreground" Value="{StaticResource TextColorBrush_Dim}"/>
    	<Setter Property="HorizontalContentAlignment" Value="Center"/>
    	<Setter Property="VerticalContentAlignment" Value="Center"/>
    	<Setter Property="Padding" Value="1"/>
    	<Setter Property="FontSize" Value="16"/>
    	<Setter Property="FontWeight" Value="Bold" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
    	<Setter Property="Template">
    		<Setter.Value>
    			<ControlTemplate TargetType="{x:Type Button}">
    				<ControlTemplate.Resources>
    					<Storyboard x:Key="Storyboard1"/>
    					<Storyboard x:Key="Storyboard2"/>
    				</ControlTemplate.Resources>
    				<Grid Width="Auto" Height="60" x:Name="Button_Normal">

                        <Grid.Effect>
                            <DropShadowEffect ShadowDepth="2" Direction="270" Opacity="0.4" />
                        </Grid.Effect>
                        <Border x:Name="border" CornerRadius="26" BorderThickness="3" d:LayoutOverrides="Width, Height" Background="{StaticResource Brush_ButtonN2}" Margin="0">
    						<Border.BorderBrush>
    							<LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
    								<GradientStop Color="#FFBDF8FD"/>
    								<GradientStop Color="#FF036AA0" Offset="1"/>
    							</LinearGradientBrush>
    						</Border.BorderBrush>
    					</Border>
    					<Border x:Name="border_H" CornerRadius="26" BorderThickness="3" d:LayoutOverrides="Width, Height" Visibility="Hidden" Background="{StaticResource Brush_ButtonH2}" Margin="0"/>
    					<Border x:Name="border_D" CornerRadius="26" BorderThickness="3" d:LayoutOverrides="Width, Height" Visibility="Hidden" Background="{StaticResource Brush_ButtonD2}" Margin="0"/>
    					<StackPanel Margin="40,0" Orientation="Horizontal" d:LayoutOverrides="Height" VerticalAlignment="Center">
    						<ContentPresenter Height="Auto" Margin="0,0,10,0">
                                <ContentPresenter.Effect>
                                    <DropShadowEffect ShadowDepth="2" Direction="85" Opacity="0.4" Color="#FF4B1303"/>
                                </ContentPresenter.Effect>
                            </ContentPresenter>
    						<TextBlock x:Name="contentPresenter" 
    							HorizontalAlignment="Center" 
    							VerticalAlignment="Center" 
    							RenderTransformOrigin="0.5,0.5"
    							Text="{TemplateBinding Property=Content}" Style="{StaticResource TextBlockStyle_Head1}" Foreground="{StaticResource TextColorBrush_Light}"
    							MaxWidth="{TemplateBinding Width}" FontWeight="Bold">

    							<TextBlock.Effect>
    								<DropShadowEffect ShadowDepth="2" Direction="85" Opacity="0.4" Color="#FF4B1303"/>
    							</TextBlock.Effect>
    						</TextBlock>
    					</StackPanel>
    					<Ellipse x:Name="ellipse" Fill="#7FF4F4F5" HorizontalAlignment="Left" Height="16" Margin="15,0,0,0" Stroke="{x:Null}" VerticalAlignment="Top" Width="12" RenderTransformOrigin="0.5,0.5">
    						<Ellipse.RenderTransform>
    							<TransformGroup>
    								<ScaleTransform/>
    								<SkewTransform/>
    								<RotateTransform Angle="56.954"/>
    								<TranslateTransform/>
    							</TransformGroup>
    						</Ellipse.RenderTransform>
    					</Ellipse>
						
						
    				</Grid>
    				<ControlTemplate.Triggers>
    					<Trigger Property="IsPressed" Value="True">
    						<Setter Property="RenderTransform" TargetName="contentPresenter">
    							<Setter.Value>
    								<TransformGroup>
    									<ScaleTransform/>
    									<SkewTransform/>
    									<RotateTransform/>
    									<TranslateTransform X="0" Y="1"/>
    								</TransformGroup>
    							</Setter.Value>
    						</Setter>
    						<Setter Property="Visibility" TargetName="border_D" Value="Visible"/>
    						<Setter Property="Visibility" TargetName="ellipse" Value="Hidden"/>
    					</Trigger>
    					<Trigger Property="IsMouseOver" Value="True">
    						<Setter Property="Visibility" TargetName="border_H" Value="Visible"/>
    					</Trigger>
    					<Trigger Property="IsKeyboardFocused" Value="true"/>
    					<Trigger Property="ToggleButton.IsChecked" Value="true"/>
    					<Trigger Property="IsEnabled" Value="false">
    						<Setter Property="Opacity" TargetName="Button_Normal" Value="0.3"/>
    					</Trigger>
    					<!--<Trigger Property="IsTextTrimmed" SourceName="contentPresenter" Value="True">
                            <Setter Property="ToolTip">
                                <Setter.Value>
                                    <Binding ElementName="contentPresenter" Path="Text" />
                                </Setter.Value>
                            </Setter>
                        </Trigger>-->
    				</ControlTemplate.Triggers>
    			</ControlTemplate>
    		</Setter.Value>
    	</Setter>
    </Style>
    <Style x:Key="ButtonStyle_Navi_Icon" TargetType="{x:Type Button}">
    	<Setter Property="BorderThickness" Value="1"/>
    	<Setter Property="Foreground" Value="{StaticResource TextColorBrush_Light}"/>
    	<Setter Property="HorizontalContentAlignment" Value="Center"/>
    	<Setter Property="VerticalContentAlignment" Value="Center"/>
    	<Setter Property="Padding" Value="1"/>
    	<Setter Property="FontSize" Value="14"/>
    	<Setter Property="FontWeight" Value="Medium" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
    	<Setter Property="Template">
    		<Setter.Value>
    			<ControlTemplate TargetType="{x:Type Button}">
    				<ControlTemplate.Resources>
    					<Storyboard x:Key="Storyboard1"/>
    					<Storyboard x:Key="Storyboard2"/>
    				</ControlTemplate.Resources>
    				<Grid Width="60" Height="60" x:Name="Button_Normal">



                        <Grid.Effect>
                            <DropShadowEffect ShadowDepth="2" Direction="270" Opacity="0.4" />
                        </Grid.Effect>

                        <Border x:Name="border" CornerRadius="30" BorderThickness="3" Background="{StaticResource Brush_ButtonN3}" Grid.ColumnSpan="1" d:LayoutOverrides="Width, Height">
    						<Border.BorderBrush>
    							<LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
    								<GradientStop Color="#FFA0D269"/>
    								<GradientStop Color="#FF274C1D" Offset="1"/>
    							</LinearGradientBrush>
    						</Border.BorderBrush>
    					</Border>
    					<Border x:Name="border_H_Copy" CornerRadius="30" BorderThickness="3" Visibility="Hidden" Background="{StaticResource Brush_ButtonH2}" Grid.ColumnSpan="1" d:LayoutOverrides="Width, Height"/>
    					<Border x:Name="border_D_Copy" CornerRadius="30" BorderThickness="3" Visibility="Hidden" Background="{StaticResource Brush_ButtonD2}" Grid.ColumnSpan="1" d:LayoutOverrides="Width, Height"/>
    					<ContentPresenter x:Name="contentPresenter1" Grid.ColumnSpan="1" HorizontalAlignment="Center" VerticalAlignment="Center" RenderTransformOrigin="0.5,0.5" Width="Auto" Height="Auto" Margin="0">
    						<ContentPresenter.RenderTransform>
    							<TransformGroup>
    								<ScaleTransform/>
    								<SkewTransform/>
    								<RotateTransform/>
    								<TranslateTransform/>
    							</TransformGroup>
    						</ContentPresenter.RenderTransform>

                            <ContentPresenter.Effect>
                                <DropShadowEffect ShadowDepth="1" Direction="90" Opacity="0.4" />
                            </ContentPresenter.Effect>

                        </ContentPresenter>
    					<Ellipse x:Name="ellipse" Fill="#7FF4F4F5" HorizontalAlignment="Left" Height="14" Margin="8,5,0,0" Stroke="{x:Null}" VerticalAlignment="Top" Width="10" RenderTransformOrigin="0.5,0.5">
    						<Ellipse.RenderTransform>
    							<TransformGroup>
    								<ScaleTransform/>
    								<SkewTransform/>
    								<RotateTransform Angle="56.954"/>
    								<TranslateTransform/>
    							</TransformGroup>
    						</Ellipse.RenderTransform>
    					</Ellipse>
    				</Grid>
    				<ControlTemplate.Triggers>
    					<Trigger Property="IsPressed" Value="True">
    						<Setter Property="RenderTransform" TargetName="contentPresenter1">
    							<Setter.Value>
    								<TransformGroup>
    									<ScaleTransform/>
    									<SkewTransform/>
    									<RotateTransform/>
    									<TranslateTransform Y="1"/>
    								</TransformGroup>
    							</Setter.Value>
    						</Setter>
    					</Trigger>
    					<Trigger Property="IsKeyboardFocused" Value="true"/>
    					<Trigger Property="ToggleButton.IsChecked" Value="true"/>
    					<Trigger Property="IsEnabled" Value="false">
    						<Setter Property="Opacity" TargetName="Button_Normal" Value="0.3"/>
    					</Trigger>
    					<!--<Trigger Property="IsTextTrimmed" SourceName="contentPresenter" Value="True">
                            <Setter Property="ToolTip">
                                <Setter.Value>
                                    <Binding ElementName="contentPresenter" Path="Text" />
                                </Setter.Value>
                            </Setter>
                        </Trigger>-->
    				</ControlTemplate.Triggers>
    			</ControlTemplate>
    		</Setter.Value>
    	</Setter>
    </Style>
    <Style x:Key="ButtonStyle_BtnStart" TargetType="{x:Type Button}">
    	<Setter Property="BorderThickness" Value="1"/>
    	<Setter Property="Foreground" Value="{StaticResource TextColorBrush_Dim}"/>
    	<Setter Property="HorizontalContentAlignment" Value="Center"/>
    	<Setter Property="VerticalContentAlignment" Value="Center"/>
    	<Setter Property="Padding" Value="1"/>
    	<Setter Property="FontSize" Value="16"/>
    	<Setter Property="FontWeight" Value="Bold" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
    	<Setter Property="Template">
    		<Setter.Value>
    			<ControlTemplate TargetType="{x:Type Button}">
    				<ControlTemplate.Resources>
    					<Storyboard x:Key="Storyboard1"/>
    					<Storyboard x:Key="Storyboard2"/>
    				</ControlTemplate.Resources>
    				<Grid Width="Auto" Height="60" x:Name="Button_Normal">

                        <Grid.Effect>
                            <DropShadowEffect ShadowDepth="2" Direction="270" Opacity="0.4" />
                        </Grid.Effect>
                        <Border x:Name="border" CornerRadius="26" BorderThickness="3" d:LayoutOverrides="Width, Height" Background="{StaticResource Brush_ButtonN}" Margin="0">
    						<Border.BorderBrush>
    							<LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
    								<GradientStop Color="#FFD4FEA5" Offset="0"/>
    								<GradientStop Color="#FF058226" Offset="1"/>
    							</LinearGradientBrush>
    						</Border.BorderBrush>
    					</Border>
    					<Border x:Name="border_H" CornerRadius="26" BorderThickness="3" d:LayoutOverrides="Width, Height" Visibility="Hidden" Background="{StaticResource Brush_ButtonH}" Margin="0"/>
    					<Border x:Name="border_D" CornerRadius="26" BorderThickness="3" d:LayoutOverrides="Width, Height" Visibility="Hidden" Background="{StaticResource Brush_ButtonD}" Margin="0"/>
    					<StackPanel Orientation="Horizontal" Margin="30,0" VerticalAlignment="Center">
    						<ContentPresenter>
                                <ContentPresenter.Effect>
                                    <DropShadowEffect ShadowDepth="2" Direction="85" Color="#036703"/>
    							</ContentPresenter.Effect>
    						</ContentPresenter>
    						<TextBlock x:Name="contentPresenter" 
    							HorizontalAlignment="Stretch" 
    							VerticalAlignment="Center" 
    							RenderTransformOrigin="0.5,0.5"
    							Text="{TemplateBinding Property=Content}" Style="{StaticResource TextBlockStyle_Head1}" Foreground="{StaticResource TextColorBrush_Light}"
    							MaxWidth="{TemplateBinding Width}" FontWeight="Bold" Margin="10,0,0,0">

    							<TextBlock.Effect>
    								<DropShadowEffect ShadowDepth="2" Direction="85" Opacity="0.4" Color="#036703"/>
    							</TextBlock.Effect>
    						</TextBlock>
    					</StackPanel>
    					<Ellipse x:Name="ellipse" Fill="#7FF4F4F5" HorizontalAlignment="Left" Height="16" Margin="15,0,0,0" Stroke="{x:Null}" VerticalAlignment="Top" Width="12" RenderTransformOrigin="0.5,0.5">
    						<Ellipse.RenderTransform>
    							<TransformGroup>
    								<ScaleTransform/>
    								<SkewTransform/>
    								<RotateTransform Angle="56.954"/>
    								<TranslateTransform/>
    							</TransformGroup>
    						</Ellipse.RenderTransform>
    					</Ellipse>
						
						
    				</Grid>
    				<ControlTemplate.Triggers>
    					<Trigger Property="IsPressed" Value="True">
    						<Setter Property="RenderTransform" TargetName="contentPresenter">
    							<Setter.Value>
    								<TransformGroup>
    									<ScaleTransform/>
    									<SkewTransform/>
    									<RotateTransform/>
    									<TranslateTransform X="0" Y="1"/>
    								</TransformGroup>
    							</Setter.Value>
    						</Setter>
    						<Setter Property="Visibility" TargetName="border_D" Value="Visible"/>
    						<Setter Property="Visibility" TargetName="ellipse" Value="Hidden"/>
    					</Trigger>
    					<Trigger Property="IsMouseOver" Value="True">
    						<Setter Property="Visibility" TargetName="border_H" Value="Visible"/>
    					</Trigger>
    					<Trigger Property="IsKeyboardFocused" Value="true"/>
    					<Trigger Property="ToggleButton.IsChecked" Value="true"/>
    					<Trigger Property="IsEnabled" Value="false">
    						<Setter Property="Opacity" TargetName="Button_Normal" Value="0.3"/>
    					</Trigger>
    					<!--<Trigger Property="IsTextTrimmed" SourceName="contentPresenter" Value="True">
                            <Setter Property="ToolTip">
                                <Setter.Value>
                                    <Binding ElementName="contentPresenter" Path="Text" />
                                </Setter.Value>
                            </Setter>
                        </Trigger>-->
    				</ControlTemplate.Triggers>
    			</ControlTemplate>
    		</Setter.Value>
    	</Setter>
    </Style>
    <Style x:Key="ButtonStyle_Help" TargetType="{x:Type Button}">
    	<Setter Property="BorderThickness" Value="1"/>
    	<Setter Property="Foreground" Value="{StaticResource TextColorBrush_Light}"/>
    	<Setter Property="HorizontalContentAlignment" Value="Center"/>
    	<Setter Property="VerticalContentAlignment" Value="Center"/>
    	<Setter Property="Padding" Value="1"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
    	<Setter Property="Template">
    		<Setter.Value>
    			<ControlTemplate TargetType="{x:Type Button}">
    				<ControlTemplate.Resources>
    					<Storyboard x:Key="Storyboard1"/>
    					<Storyboard x:Key="Storyboard2"/>
    				</ControlTemplate.Resources>
    				<Grid Background="#00000000" Width="40" Height="40">

                        <Grid.Effect>
                            <DropShadowEffect ShadowDepth="2" Direction="270" Opacity="0.5" />
                        </Grid.Effect>

                        <Path x:Name="Rounded_Rectangle_1" Data="F1M25.148,32.947C22.465,32.947 20.266,35.169 20.266,37.879 20.266,40.589 22.465,42.811 25.148,42.811 27.832,42.811 30.031,40.589 30.031,37.879 30.031,35.169 27.832,32.947 25.148,32.947z M25.764,10.42C18.902,10.42 15.12,15.041 15.12,18.862 15.12,20.772 16.571,22.105 18.419,22.105 21.366,22.105 23.081,20.239 23.389,17.351 23.477,16.418 23.565,15.218 24.797,15.218 25.94,15.218 26.336,16.551 26.336,17.485 26.336,21.306 22.553,23.305 22.553,27.082 22.553,28.904 23.697,30.014 25.5,30.014 29.767,30.014 27.172,26.593 31.702,24.86 34.957,23.616 36.629,21.483 36.629,18.773 36.629,13.486 30.339,10.42 25.764,10.42z M25.877,2C39.065,2 49.755,12.745 49.755,26 49.755,39.255 39.065,50 25.877,50 12.69,50 2,39.255 2,26 2,12.745 12.69,2 25.877,2z" Height="Auto" Width="Auto" Stretch="Fill">
    						<Path.Fill>
    							<LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
    								<GradientStop Color="#FFECF7FF" Offset="0"/>
    								<GradientStop Color="#FF83C1F0" Offset="1"/>
    							</LinearGradientBrush>
    						</Path.Fill>
    					</Path>
    					<Path x:Name="Rounded_Rectangle_1_Copy" Data="F1M25.148,32.947C22.465,32.947 20.266,35.169 20.266,37.879 20.266,40.589 22.465,42.811 25.148,42.811 27.832,42.811 30.031,40.589 30.031,37.879 30.031,35.169 27.832,32.947 25.148,32.947z M25.764,10.42C18.902,10.42 15.12,15.041 15.12,18.862 15.12,20.772 16.571,22.105 18.419,22.105 21.366,22.105 23.081,20.239 23.389,17.351 23.477,16.418 23.565,15.218 24.797,15.218 25.94,15.218 26.336,16.551 26.336,17.485 26.336,21.306 22.553,23.305 22.553,27.082 22.553,28.904 23.697,30.014 25.5,30.014 29.767,30.014 27.172,26.593 31.702,24.86 34.957,23.616 36.629,21.483 36.629,18.773 36.629,13.486 30.339,10.42 25.764,10.42z M25.877,2C39.065,2 49.755,12.745 49.755,26 49.755,39.255 39.065,50 25.877,50 12.69,50 2,39.255 2,26 2,12.745 12.69,2 25.877,2z" Height="Auto" Width="Auto" Stretch="Fill" Opacity="0.8" Fill="{x:Null}">
    						<Path.Stroke>
    							<LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
    								<GradientStop Color="White" Offset="0"/>
    								<GradientStop Offset="0.365"/>
    							</LinearGradientBrush>
    						</Path.Stroke>
    					</Path>
    					<Image x:Name="image" Source="/SoonLearning.AppCenter;component/Resources/Images/Help_D.png" Stretch="Fill" Margin="-5" Visibility="Hidden"/>
    				</Grid>
    				<ControlTemplate.Triggers>
    					<Trigger Property="IsMouseOver" Value="True">
    						<Setter Property="Fill" TargetName="Rounded_Rectangle_1">
    							<Setter.Value>
    								<LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
    									<GradientStop Color="White" Offset="0"/>
    									<GradientStop Color="#FFB3DDFD" Offset="1"/>
    								</LinearGradientBrush>
    							</Setter.Value>
    						</Setter>
    					</Trigger>
    					<Trigger Property="IsKeyboardFocused" Value="true"/>
    					<Trigger Property="ToggleButton.IsChecked" Value="true"/>
    					<Trigger Property="IsPressed" Value="True">
    						<Setter Property="Visibility" TargetName="image" Value="Visible"/>
    					</Trigger>
    					<Trigger Property="IsEnabled" Value="false">
    						<Setter Property="Foreground" Value="#ADADAD"/>
    					</Trigger>
    				</ControlTemplate.Triggers>
    			</ControlTemplate>
    		</Setter.Value>
    	</Setter>
    </Style>
    <Style x:Key="ButtonStyle_Navi_Icon_Red" TargetType="{x:Type Button}">
    	<Setter Property="BorderThickness" Value="1"/>
    	<Setter Property="Foreground" Value="{StaticResource TextColorBrush_Light}"/>
    	<Setter Property="HorizontalContentAlignment" Value="Center"/>
    	<Setter Property="VerticalContentAlignment" Value="Center"/>
    	<Setter Property="Padding" Value="1"/>
    	<Setter Property="FontSize" Value="14"/>
    	<Setter Property="FontWeight" Value="Medium" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
    	<Setter Property="Template">
    		<Setter.Value>
    			<ControlTemplate TargetType="{x:Type Button}">
    				<ControlTemplate.Resources>
    					<Storyboard x:Key="Storyboard1"/>
    					<Storyboard x:Key="Storyboard2"/>
    				</ControlTemplate.Resources>
    				<Grid Width="60" Height="60" x:Name="Button_Normal">
    					
						
						
    					<Grid.Effect>
                            <DropShadowEffect ShadowDepth="2" Direction="270" Opacity="0.4" />
    					</Grid.Effect>
						
    					<Border x:Name="border" CornerRadius="30" BorderThickness="3" Grid.ColumnSpan="1" >
    						<Border.Background>
	
	
	
    							<LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
    								<GradientStop Color="#FFFF5353" Offset="0"/>
    
    								<GradientStop Color="#FFA30000" Offset="1"/>
    							</LinearGradientBrush>
	
    						</Border.Background>
    						<Border.BorderBrush>
    							<LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
    								<GradientStop Color="#FFFF7F73"/>
    								<GradientStop Color="#FF680000" Offset="1"/>
    							</LinearGradientBrush>
    						</Border.BorderBrush>
    					</Border>
    					<Border x:Name="border_H_Copy" CornerRadius="30" BorderThickness="3" Visibility="Hidden" Grid.ColumnSpan="1" d:LayoutOverrides="Width, Height">
    						<Border.Background>
	
    							<LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
    								<GradientStop Color="#FFFF8282" Offset="0.004"/>
    								<GradientStop Color="#FFFF2222" Offset="0.991"/>
    							</LinearGradientBrush>
    						</Border.Background>
    					</Border>
    					<Border x:Name="border_D_Copy" CornerRadius="30" BorderThickness="3" Visibility="Hidden" Grid.ColumnSpan="1" d:LayoutOverrides="Width, Height">
    						<Border.Background>
    							<LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
    								<GradientStop Color="#FF801717" Offset="0.004"/>
    								<GradientStop Offset="0.996" Color="#FFC41919"/>
    							</LinearGradientBrush>
    						</Border.Background>
    					</Border>
    					<ContentPresenter x:Name="contentPresenter1" Grid.ColumnSpan="1" HorizontalAlignment="Center" VerticalAlignment="Center" RenderTransformOrigin="0.5,0.5" Width="Auto" Height="Auto" Margin="0">
    						<ContentPresenter.RenderTransform>
    							<TransformGroup>
    								<ScaleTransform/>
    								<SkewTransform/>
    								<RotateTransform/>
    								<TranslateTransform/>
    							</TransformGroup>
    						</ContentPresenter.RenderTransform>

                            <ContentPresenter.Effect>
                                <DropShadowEffect ShadowDepth="1" Direction="90" Opacity="0.4" />
                            </ContentPresenter.Effect>

                        </ContentPresenter>
    					<Ellipse x:Name="ellipse" Fill="#7FF4F4F5" HorizontalAlignment="Left" Height="14" Margin="8,5,0,0" Stroke="{x:Null}" VerticalAlignment="Top" Width="10" RenderTransformOrigin="0.5,0.5">
    						<Ellipse.RenderTransform>
    							<TransformGroup>
    								<ScaleTransform/>
    								<SkewTransform/>
    								<RotateTransform Angle="56.954"/>
    								<TranslateTransform/>
    							</TransformGroup>
    						</Ellipse.RenderTransform>
    					</Ellipse>
    				</Grid>
    				<ControlTemplate.Triggers>
    					<Trigger Property="IsPressed" Value="True">
    						<Setter Property="RenderTransform" TargetName="contentPresenter1">
    							<Setter.Value>
    								<TransformGroup>
    									<ScaleTransform/>
    									<SkewTransform/>
    									<RotateTransform/>
    									<TranslateTransform Y="1"/>
    								</TransformGroup>
    							</Setter.Value>
    						</Setter>
    					</Trigger>
    					<Trigger Property="IsKeyboardFocused" Value="true"/>
    					<Trigger Property="ToggleButton.IsChecked" Value="true"/>
    					<Trigger Property="IsEnabled" Value="false">
    						<Setter Property="Opacity" TargetName="Button_Normal" Value="0.3"/>
    					</Trigger>
    					<!--<Trigger Property="IsTextTrimmed" SourceName="contentPresenter" Value="True">
                            <Setter Property="ToolTip">
                                <Setter.Value>
                                    <Binding ElementName="contentPresenter" Path="Text" />
                                </Setter.Value>
                            </Setter>
                        </Trigger>-->
    				</ControlTemplate.Triggers>
    			</ControlTemplate>
    		</Setter.Value>
    	</Setter>
    </Style>
    <Style x:Key="ButtonStyle_IconBtn_Single" TargetType="{x:Type Button}">
    	<Setter Property="BorderThickness" Value="1"/>
    	<Setter Property="Foreground" Value="{StaticResource TextColorBrush_Light}"/>
    	<Setter Property="HorizontalContentAlignment" Value="Center"/>
    	<Setter Property="VerticalContentAlignment" Value="Center"/>
    	<Setter Property="Padding" Value="1"/>
    	<Setter Property="FontSize" Value="14"/>
    	<Setter Property="FontWeight" Value="Medium" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
    	<Setter Property="Template">
    		<Setter.Value>
    			<ControlTemplate TargetType="{x:Type Button}">
    				<ControlTemplate.Resources>
    					<Storyboard x:Key="Storyboard1"/>
    					<Storyboard x:Key="Storyboard2"/>
    				</ControlTemplate.Resources>
    				<Grid Width="Auto" Height="60" x:Name="Button_Normal">


                        <Grid.Effect>
                            <DropShadowEffect ShadowDepth="2" Direction="270" Opacity="0.4" />
                        </Grid.Effect>

                        <Border x:Name="border" CornerRadius="26" BorderThickness="3" Background="{StaticResource Brush_ButtonN2}" Grid.ColumnSpan="1" d:LayoutOverrides="Width, Height">
    						<Border.BorderBrush>
    							<LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
    								<GradientStop Color="#FFBDF8FD"/>
    								<GradientStop Color="#FF036AA0" Offset="1"/>
    							</LinearGradientBrush>
    						</Border.BorderBrush>
    					</Border>
    					<Border x:Name="border_H_Copy" CornerRadius="26" BorderThickness="3" Visibility="Hidden" Background="{StaticResource Brush_ButtonH2}" Grid.ColumnSpan="1" d:LayoutOverrides="Width, Height"/>
    					<Border x:Name="border_D_Copy" CornerRadius="26" BorderThickness="3" Visibility="Hidden" Background="{StaticResource Brush_ButtonD2}" Grid.ColumnSpan="1" d:LayoutOverrides="Width, Height"/>
    					<TextBlock x:Name="contentPresenter" 
    						HorizontalAlignment="Center" 
    						VerticalAlignment="Center" 
    						RenderTransformOrigin="0.5,0.5" Style="{StaticResource TextBlockStyle_Head1}" Foreground="White"
    						MaxWidth="{TemplateBinding Width}" Grid.Column="0" Margin="40,0" Text="{TemplateBinding Content}">
    						<TextBlock.RenderTransform>
    							<TransformGroup>
    								<ScaleTransform/>
    								<SkewTransform/>
    								<RotateTransform/>
    								<TranslateTransform/>
    							</TransformGroup>
    						</TextBlock.RenderTransform>
							
    						<TextBlock.Effect>
    							<DropShadowEffect ShadowDepth="2" Direction="90" Opacity="0.4" />
    						</TextBlock.Effect>
							
							
    					</TextBlock>
    					<Ellipse x:Name="ellipse" Fill="#7FF4F4F5" HorizontalAlignment="Left" Height="16" Margin="7,5,0,0" Stroke="{x:Null}" VerticalAlignment="Top" Width="12" RenderTransformOrigin="0.5,0.5">
    						<Ellipse.RenderTransform>
    							<TransformGroup>
    								<ScaleTransform/>
    								<SkewTransform/>
    								<RotateTransform Angle="56.954"/>
    								<TranslateTransform/>
    							</TransformGroup>
    						</Ellipse.RenderTransform>
    					</Ellipse>
    				</Grid>
    				<ControlTemplate.Triggers>
    					<Trigger Property="IsPressed" Value="True">
    						<Setter Property="RenderTransform" TargetName="contentPresenter">
    							<Setter.Value>
    								<TransformGroup>
    									<ScaleTransform/>
    									<SkewTransform/>
    									<RotateTransform/>
    									<TranslateTransform X="0" Y="1"/>
    								</TransformGroup>
    							</Setter.Value>
    						</Setter>
    					</Trigger>
    					<Trigger Property="IsKeyboardFocused" Value="true"/>
    					<Trigger Property="ToggleButton.IsChecked" Value="true"/>
    					<Trigger Property="IsEnabled" Value="false">
    						<Setter Property="Opacity" TargetName="Button_Normal" Value="0.3"/>
    					</Trigger>
    					<!--<Trigger Property="IsTextTrimmed" SourceName="contentPresenter" Value="True">
                            <Setter Property="ToolTip">
                                <Setter.Value>
                                    <Binding ElementName="contentPresenter" Path="Text" />
                                </Setter.Value>
                            </Setter>
                        </Trigger>-->
    				</ControlTemplate.Triggers>
    			</ControlTemplate>
    		</Setter.Value>
    	</Setter>
    </Style>

</ResourceDictionary>