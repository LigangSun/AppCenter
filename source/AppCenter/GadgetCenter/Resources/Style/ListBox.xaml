<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" 
	                xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
                    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
                    xmlns:ap="clr-namespace:SoonLearning.AppCenter"
                    xmlns:sys="clr-namespace:System;assembly=mscorlib"
                    xmlns:win="clr-namespace:System.Windows;assembly=PresentationFramework"
                    xmlns:data="clr-namespace:SoonLearning.AppCenter.Data;assembly=SoonLearning.AppCenter.Common"
                    xmlns:appData="clr-namespace:SoonLearning.AppCenter.Data"
                    xmlns:commCtrl="clr-namespace:SoonLearning.AppCenter.Controls;assembly=SoonLearning.AppCenter.Common"
                    xmlns:convert="clr-namespace:SoonLearning.AppCenter.Converter;assembly=SoonLearning.AppCenter.Common"
                    xmlns:Microsoft_Windows_Themes="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero" 
                    xmlns:System_Windows_Documents="clr-namespace:System.Windows.Documents;assembly=PresentationUI" 
                    mc:Ignorable="d">
	<!-- Resource dictionary entries should be defined here. -->

    <ControlTemplate x:Key="ScrollViewerControlTemplate2" TargetType="{x:Type ScrollViewer}">
        <Grid x:Name="Grid" Background="{TemplateBinding Background}">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="Auto"/>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="*"/>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>
            <Rectangle x:Name="Corner" Grid.Column="1" Fill="{StaticResource {x:Static SystemColors.ControlBrushKey}}" Grid.Row="1"/>
            <ScrollContentPresenter x:Name="PART_ScrollContentPresenter" CanContentScroll="{TemplateBinding CanContentScroll}" CanHorizontallyScroll="False" CanVerticallyScroll="False" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" Grid.Column="0" Margin="{TemplateBinding Padding}" Grid.Row="0"/>
            <ScrollBar x:Name="PART_VerticalScrollBar" AutomationProperties.AutomationId="VerticalScrollBar" Cursor="Arrow" Grid.Column="1" Maximum="{TemplateBinding ScrollableHeight}" Minimum="0" Grid.Row="0" Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}" Value="{Binding VerticalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" ViewportSize="{TemplateBinding ViewportHeight}" Style="{StaticResource ScrollBarStyle_Blue}"/>
            <ScrollBar x:Name="PART_HorizontalScrollBar" AutomationProperties.AutomationId="HorizontalScrollBar" Cursor="Arrow" Grid.Column="0" Maximum="{TemplateBinding ScrollableWidth}" Minimum="0" Orientation="Horizontal" Grid.Row="1" Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}" Value="{Binding HorizontalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" ViewportSize="{TemplateBinding ViewportWidth}"/>
        </Grid>
    </ControlTemplate>
    
    <!-- App Management UI style-->
    <Style x:Key="MainTabButtonStyle" TargetType="{x:Type ListBoxItem}">
        <Setter Property="FocusVisualStyle" Value="{StaticResource ButtonFocusVisual}"/>
        <Setter Property="Background" Value="{StaticResource ButtonNormalBackground}"/>
        <Setter Property="BorderBrush" Value="{StaticResource ButtonNormalBorder}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Foreground" Value="{StaticResource TextColorBrush_Light}"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Padding" Value="1"/>
        <Setter Property="FontSize" Value="16" />
        <Setter Property="FontWeight" Value="Medium" />
        <Setter Property="Margin" Value="5,0" />
        <Setter Property="FontFamily" Value="/Resources/迷你简卡通.TTF#迷你简卡通" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListBoxItem}">
                    <ControlTemplate.Resources>
                        <Storyboard x:Key="Storyboard1">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="contentPresenter" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.2000000" Value="1"/>
                            </DoubleAnimationUsingKeyFrames>

                            <!--DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="contentPresenter" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)">
                            	<SplineDoubleKeyFrame KeyTime="00:00:00.2000000" Value="1.05"/>
                            </DoubleAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="contentPresenter" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)">
                            	<SplineDoubleKeyFrame KeyTime="00:00:00.2000000" Value="1.05"/>
                            </DoubleAnimationUsingKeyFrames-->


                        </Storyboard>
                        <Storyboard x:Key="Storyboard2">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="contentPresenter" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.2000000" Value="1"/>
                            </DoubleAnimationUsingKeyFrames>


                            <!--DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="contentPresenter" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)">
                            	<SplineDoubleKeyFrame KeyTime="00:00:00.2000000" Value="1"/>
                            </DoubleAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="contentPresenter" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)">
                            	<SplineDoubleKeyFrame KeyTime="00:00:00.2000000" Value="1"/>
                            </DoubleAnimationUsingKeyFrames-->
                        </Storyboard>
                    </ControlTemplate.Resources>
                    <Grid MinWidth="80" MinHeight="20" Background="#00000000">
                    	<ContentPresenter Margin="10,0"
                    		x:Name="contentPresenter" 
                    		HorizontalAlignment="Center"
                    		VerticalAlignment="Center"
                    		Width="Auto"
                    		Content="{TemplateBinding Content}" 
                    		Opacity="0.7" 
                    		RenderTransformOrigin="0.5,0.5" >
                    		<ContentPresenter.RenderTransform>
                    			<TransformGroup>
                    				<ScaleTransform/>
                    				<SkewTransform/>
                    				<RotateTransform/>
                    				<TranslateTransform/>
                    			</TransformGroup>
                    		</ContentPresenter.RenderTransform>
                    	</ContentPresenter>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True"/>
                        <Trigger Property="IsKeyboardFocused" Value="true"/>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter Property="FontWeight" Value="Bold" />
                            <Setter Property="Opacity" TargetName="contentPresenter" Value="1"/>
                        </Trigger>
                        <Trigger Property="IsSelected" Value="False">
                            <Setter Property="FontWeight" Value="Normal" />
                        </Trigger>
                        <!--<Trigger Property="IsPressed" Value="True">
                            <Setter Property="Margin" TargetName="contentPresenter" Value="10,0,0,-1"/>
                        </Trigger>-->
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Foreground" Value="#ADADAD"/>
                            <Setter Property="Opacity" TargetName="contentPresenter" Value="1"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="SubTabButtonStyle" TargetType="{x:Type ListBoxItem}">
        <!--<Setter Property="Background" Value="#F4F4F4"/>-->
        <Setter Property="BorderBrush" Value="{StaticResource CheckBoxStroke}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Foreground" Value="{StaticResource TextColorBrush_Dark}" />
        <Setter Property="Height" Value="46" />
        <Setter Property="FontSize" Value="20" />
        <Setter Property="FontFamily" Value="/Resources/迷你简卡通.TTF#迷你简卡通" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListBoxItem}">
                    <ControlTemplate.Resources>
                        <Storyboard x:Key="Storyboard1">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="contentPresenter" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.2000000" Value="1"/>
                            </DoubleAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="contentPresenter" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.2000000" Value="1.2"/>
                            </DoubleAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="contentPresenter" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.2000000" Value="1.2"/>
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="Storyboard2">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="contentPresenter" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.2000000" Value="1"/>
                            </DoubleAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="contentPresenter" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.2000000" Value="1"/>
                            </DoubleAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="contentPresenter" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.2000000" Value="0.7"/>
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                    </ControlTemplate.Resources>
                    <Grid Background="#00000000"
                          HorizontalAlignment="Stretch">

                    	<Grid x:Name="grid" Visibility="Hidden">
                    		<Border BorderThickness="1" Background="White" BorderBrush="#33000000"/>
                            <Border BorderBrush="#19000000" BorderThickness="1,0,0,0" Margin="0,1,1,1" HorizontalAlignment="Right" Width="40" Background="{StaticResource Brush_TitleBG}">
                    			<Path Data="M15.25,8.5 L15.25,36 31.375,21.625 z" HorizontalAlignment="Stretch" Margin="14.25,8.5,8.625,8" Stretch="Fill" Width="Auto" Fill="White"/>
                    		</Border>
                    	</Grid>

                    	<TextBlock x:Name="contentPresenter"
                    		       HorizontalAlignment="Right" 
                    		       VerticalAlignment="Center"
                    		       Grid.Column="0" 
                    		       RenderTransformOrigin="0.5,0.5"
                    		       Text="{Binding Title}"
                    		       Opacity="1" 
                                   Style="{StaticResource TextBlockStyle_Head1}" 
                                   Foreground="{StaticResource TextColorBrush_Grey}" 
                                   Margin="0,0,45,0">
                    		<TextBlock.RenderTransform>
                    			<TransformGroup>
                    				<ScaleTransform/>
                    				<SkewTransform/>
                    				<RotateTransform/>
                    				<TranslateTransform/>
                    			</TransformGroup>
                    		</TextBlock.RenderTransform>
                    	</TextBlock>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True"/>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter Property="Visibility" TargetName="grid" Value="Visible"/>
                            <Setter Property="Foreground" TargetName="contentPresenter" Value="{StaticResource Brush_TitleBG}"/>
                        </Trigger>
                        <Trigger Property="HasContent" Value="true">
                            <Setter Property="FocusVisualStyle" Value="{StaticResource CheckRadioFocusVisual}"/>
                            <Setter Property="Padding" Value="4,0,0,0"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{StaticResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                        </Trigger>
                        <Trigger Property="IsFocused" Value="True"/>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="AppItemStyle" TargetType="{x:Type ListBoxItem}">
        <!--<Setter Property="Background" Value="#F4F4F4"/>-->
        <Setter Property="BorderBrush" Value="{StaticResource CheckBoxStroke}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="FontFamily" Value="/Resources/迷你简卡通.TTF#迷你简卡通" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListBoxItem}">
                    <ControlTemplate.Resources>
                        <Storyboard x:Key="Storyboard1">
                        	<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="border">
                        		<EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="1"/>
                        	</DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="Storyboard2">
                        	<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="border">
                        		<EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="0"/>
                        	</DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                    </ControlTemplate.Resources>

                    <Grid Width="180" 
                          Height="Auto" Margin="5,0" >
                        <Grid x:Name="contentPresenter"
                              RenderTransformOrigin="0.5,0.5" 
                              Margin="5,8">
                        <Grid.RenderTransform>
                            <TransformGroup>
                                <ScaleTransform/>
                                <SkewTransform/>
                                <RotateTransform/>
                                <TranslateTransform/>
                            </TransformGroup>
                        </Grid.RenderTransform>

                        <Grid.RowDefinitions>
                            <RowDefinition Height="130" />
                            <RowDefinition Height="40" />
                        </Grid.RowDefinitions>

                        <Border BorderBrush="White" 
                                Grid.RowSpan="1"
                                Margin="0" 
                               
                                BorderThickness="3" CornerRadius="15">
                        	<Border.Background>
                        		<ImageBrush ImageSource="/SoonLearning.AppCenter;component/Resources/Images/Dialogue_BGTile2.png" Stretch="Uniform" TileMode="Tile" Viewport="0,0,100,100" ViewportUnits="Absolute"/>
                        	</Border.Background>

                                <Border.Effect>
                                    <DropShadowEffect ShadowDepth="3" Direction="270" Opacity="0.8" />
                                </Border.Effect>



                            </Border>
                        <Border x:Name="border" BorderBrush="{x:Null}" 
                        	Grid.RowSpan="1"
                        	Margin="0" 
                               
                        	BorderThickness="3" CornerRadius="15" Opacity="0">
                        	<Border.Background>
                        		<LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                        			<GradientStop Color="#FF65DFFF" Offset="0"/>
                        			<GradientStop Color="#FF3CC5FF" Offset="1"/>
                        		</LinearGradientBrush>
                        	</Border.Background>

                                <Border.Effect>
                                    <DropShadowEffect ShadowDepth="3" Direction="270" Opacity="0.8" />
                                </Border.Effect>



                            </Border>
                        <Image Source="/SoonLearning.AppCenter;component/Resources/Images/Item_Shadow.png" Stretch="Fill" Opacity="0.5"/>
                        <Image Source="/SoonLearning.AppCenter;component/Resources/Images/IMG_Loading.png" Stretch="Uniform" Margin="3" Width="100" Height="100" Opacity="0.8"/>
                        <Border BorderBrush="White" 
                        	Grid.RowSpan="1"
                        	Margin="0" 
                               
                        	BorderThickness="3" CornerRadius="15" Background="{x:Null}"/>

                        <Image Source="{Binding Thumbnail}"
                    		   Margin="8"/>
                    	
                    	<TextBlock x:Name="textBlock" 
                    			   HorizontalAlignment="Center" 
                    			   VerticalAlignment="Center" 
                    			   Text="{Binding Title}"
                    			   Opacity="1"
                                   Grid.Row="1"
                                 
                                   Foreground="White" 
                                   Margin="0" Style="{StaticResource TextBlockStyle_Content}"/>
                    	<Image Height="54" Source="/SoonLearning.AppCenter;component/Resources/Images/Item_Specular.png" Stretch="Uniform" VerticalAlignment="Top"/>

                        <!--<Button x:Name="addButton"
                                HorizontalAlignment="Center"
                                VerticalAlignment="Top"
                                Width="80"
                                Grid.Row="2"
                                Visibility="Hidden"
                                Height="24"
                                Style="{StaticResource ButtonStyle_Sub_Small}"
                                Content="添加" />-->
                    	
                    </Grid>
                    </Grid>
                    <ControlTemplate.Triggers>
                		<Trigger Property="IsMouseOver" Value="True">
                			<Trigger.ExitActions>
                				<BeginStoryboard x:Name="Storyboard2_BeginStoryboard" Storyboard="{StaticResource Storyboard2}"/>
                			</Trigger.ExitActions>
                			<Trigger.EnterActions>
                				<BeginStoryboard Storyboard="{StaticResource Storyboard1}"/>
                			</Trigger.EnterActions>
                		</Trigger>
                		<!--<Trigger Property="HasContent" Value="true">
                            <Setter Property="FocusVisualStyle" Value="{StaticResource CheckRadioFocusVisual}"/>
                            <Setter Property="Padding" Value="4,0,0,0"/>
                        </Trigger>-->
                		<!--<Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{StaticResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                        </Trigger>-->
                	</ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

	<Style x:Key="PenddingAppItemStyle" TargetType="{x:Type ListBoxItem}">
		<!--<Setter Property="Background" Value="#F4F4F4"/>-->
		<Setter Property="BorderBrush" Value="{StaticResource CheckBoxStroke}"/>
		<Setter Property="BorderThickness" Value="1"/>
        <Setter Property="FontFamily" Value="/Resources/迷你简卡通.TTF#迷你简卡通" />
		<Setter Property="FontSize" Value="16" />
		<Setter Property="Foreground" Value="#323232"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type ListBoxItem}">
					<Grid Margin="5,0" Height="90">
						<Border x:Name="border1" BorderThickness="3" CornerRadius="8" Opacity="1" Visibility="Hidden">
							<Border.BorderBrush>
								<LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
									<GradientStop Color="#FF764828" Offset="0"/>
									<GradientStop Color="#FFA2886C" Offset="1"/>
								</LinearGradientBrush>
							</Border.BorderBrush>
							<Border.Background>
								<LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
									<GradientStop Color="#FF6BB0FF" Offset="0"/>
									<GradientStop Color="#FF4F92FD" Offset="1"/>
								</LinearGradientBrush>
							</Border.Background>
						</Border>
						<Grid x:Name="contentPresenter"
							RenderTransformOrigin="0.5,0.5" d:LayoutOverrides="Width" Margin="10">
							<Grid.RenderTransform>
								<TransformGroup>
									<ScaleTransform/>
									<SkewTransform/>
									<RotateTransform/>
									<TranslateTransform/>
								</TransformGroup>
							</Grid.RenderTransform>

							<Grid.RowDefinitions>
								<RowDefinition Height="32"/>
								<RowDefinition />
							</Grid.RowDefinitions>
							<Grid.ColumnDefinitions>
								<ColumnDefinition Width="68"/>
								<ColumnDefinition />
							</Grid.ColumnDefinitions>
							<Border x:Name="border" 
								BorderThickness="1,1,0,1" 
								Background="#00000000" 
								Opacity="0"
								Grid.RowSpan="2"
								Grid.ColumnSpan="2">
								<Border.BorderBrush>
									<LinearGradientBrush EndPoint="0.991,0.5" StartPoint="0.013,0.5">
										<GradientStop Color="White"/>
										<GradientStop Color="#FF646464" Offset="1"/>
									</LinearGradientBrush>
								</Border.BorderBrush>
							</Border>

							<Image Source="{Binding Image}"
								Grid.RowSpan="2"
								Margin="2"/>

							<StackPanel Grid.Column="1" 
								Grid.Row="0"
								Opacity="1"
								HorizontalAlignment="Left" 
								VerticalAlignment="Center"
								Orientation="Horizontal" Margin="10,0,0,0">
                                <TextBlock Text="{Binding Title}" Style="{StaticResource TextBlockStyle_Content}"/>
                                <TextBlock Text=" (" Style="{StaticResource TextBlockStyle_Content}"/>
                                <TextBlock Text="{Binding State, Converter={StaticResource appInstallState2StringConverter}}" Style="{StaticResource TextBlockStyle_Content}" />
                                <TextBlock Text=")" Style="{StaticResource TextBlockStyle_Content}"/>
							</StackPanel>

							<ProgressBar x:Name="progressBar"
								HorizontalAlignment="Stretch" 
								VerticalAlignment="Center"
								Grid.Column="1" 
								Grid.Row="1"
								Width="Auto"
								Height="30"
								RenderTransformOrigin="0.5,0.5"
								Value="{Binding Percent}"
								Style="{StaticResource ProgressBarStyle2}"
								Opacity="1" Margin="10,0,0,0"/>
						</Grid>
					</Grid>
					<ControlTemplate.Triggers>
						<!--<Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Panel.ZIndex" Value="1000" />
                            <Trigger.ExitActions>
                                <BeginStoryboard x:Name="Storyboard2_BeginStoryboard" Storyboard="{StaticResource Storyboard2}"/>
                            </Trigger.ExitActions>
                            <Trigger.EnterActions>
                                <BeginStoryboard Storyboard="{StaticResource Storyboard1}"/>
                            </Trigger.EnterActions>
                        </Trigger>-->
						<Trigger Property="IsSelected" Value="True">
							<Setter Property="Visibility" TargetName="border1" Value="Visible"/>
						</Trigger>
						<Trigger Property="HasContent" Value="true">
							<Setter Property="FocusVisualStyle" Value="{StaticResource CheckRadioFocusVisual}"/>
							<Setter Property="Padding" Value="4,0,0,0"/>
						</Trigger>
						<Trigger Property="IsEnabled" Value="false">
							<Setter Property="Foreground" Value="{StaticResource {x:Static SystemColors.GrayTextBrushKey}}"/>
						</Trigger>
						<Trigger Property="IsFocused" Value="True"/>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

    <Style x:Key="AppInstallCompletedNotifyItemStyle" TargetType="{x:Type ListBoxItem}">
        <!--<Setter Property="Background" Value="#F4F4F4"/>-->
        <Setter Property="Foreground" Value="{StaticResource TextColorBrush_Light}" />
        <Setter Property="Height" Value="128" />
        <Setter Property="FontSize" Value="16" />
        <Setter Property="FontFamily" Value="/Resources/迷你简卡通.TTF#迷你简卡通" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListBoxItem}">
                    
                    <Grid x:Name="contentPresenter"
                          RenderTransformOrigin="0.5,0.5"
                          Background="Transparent">
                        <Grid.RenderTransform>
                            <TransformGroup>
                                <ScaleTransform/>
                                <SkewTransform/>
                                <RotateTransform/>
                                <TranslateTransform/>
                            </TransformGroup>
                        </Grid.RenderTransform>

                        <Grid.RowDefinitions>
                            <RowDefinition />
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="128"/>
                            <ColumnDefinition />
                        </Grid.ColumnDefinitions>
                        <Border Grid.RowSpan="2"
                                Grid.ColumnSpan="2"
                                BorderThickness="3"
                                BorderBrush="White" Background="Black" CornerRadius="0" Opacity="0.8"/>

                        <Image Source="{Binding Image}"
                               VerticalAlignment="Center"
                               HorizontalAlignment="Center"
                               Margin="5"/>

                        <StackPanel Grid.Column="1" 
                                    Grid.Row="0"
                                    Opacity="1"
                                    Margin="5,5,15,10"
                                    HorizontalAlignment="Left" 
                                    VerticalAlignment="Center"
                                    Orientation="Vertical">
                            <TextBlock Text="{Binding Title}"
                                       FontSize="20"
                                       Margin="5,10"
                                       Foreground="{StaticResource TextColorBrush_Light}"
                                       Style="{StaticResource TextBlockStyle_BigHead}"/>
                            <StackPanel Orientation="Horizontal">
                                <TextBlock Text=" (" Style="{StaticResource TextBlockStyle_Head2}"
                                           Foreground="{StaticResource TextColorBrush_Light}"/>
                                <TextBlock Text="{Binding State, Converter={StaticResource appInstallState2StringConverter}}" 
                                           Style="{StaticResource TextBlockStyle_Head2}"
                                           Foreground="{StaticResource TextColorBrush_Light}"/>
                                <TextBlock Text=")" Style="{StaticResource TextBlockStyle_Head2}"
                                           Foreground="{StaticResource TextColorBrush_Light}"/>
                            </StackPanel>
                        </StackPanel>

                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="HasContent" Value="true">
                            <Setter Property="FocusVisualStyle" Value="{StaticResource CheckRadioFocusVisual}"/>
                            <Setter Property="Padding" Value="4,0,0,0"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{StaticResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                        </Trigger>
                        <Trigger Property="IsFocused" Value="True"/>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- ListBox Style-->
    <Style TargetType="{x:Type ListBoxItem}">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="FontFamily" Value="/Resources/迷你简卡通.TTF#迷你简卡通" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListBoxItem}" >
                    <Border SnapsToDevicePixels="True" 
                            HorizontalAlignment="Stretch" 
                            VerticalAlignment="Stretch"
                            Background="{TemplateBinding Background}">
                        <ContentPresenter />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter Property="Background" Value="Transparent"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <ItemsPanelTemplate x:Key="appManagementTypePanelTemplate">
        <VirtualizingStackPanel Margin="1"
                                IsItemsHost="True"
                                Orientation="Horizontal" 
                                VirtualizingStackPanel.VirtualizationMode="Recycling"
                                HorizontalAlignment="Left"/>
    </ItemsPanelTemplate>

    <ItemsPanelTemplate x:Key="appManagementSubTypePanelTemplate">
        <VirtualizingStackPanel Margin="1"
                                IsItemsHost="True"
                                Orientation="Vertical" 
                                VirtualizingStackPanel.VirtualizationMode="Recycling"
                                HorizontalAlignment="Stretch"/>
    </ItemsPanelTemplate>

    <ItemsPanelTemplate x:Key="subTypePanelTemplate">
        <WrapPanel Margin="1"
                   IsItemsHost="True"
                   Orientation="Horizontal" 
                   HorizontalAlignment="Left"/>
    </ItemsPanelTemplate>

    <Style x:Key="ListBoxStyle_SubGroup" TargetType="{x:Type ListBox}">
        <Setter Property="Background" Value="{StaticResource {x:Static SystemColors.WindowBrushKey}}"/>
        <Setter Property="BorderBrush" Value="{StaticResource ListBorder}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Foreground" Value="{StaticResource {x:Static SystemColors.ControlTextBrushKey}}"/>
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
        <Setter Property="ScrollViewer.PanningMode" Value="Both"/>
        <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="FontFamily" Value="/Resources/迷你简卡通.TTF#迷你简卡通" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListBox}">
                    <Border x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="1" SnapsToDevicePixels="true">
                        <ScrollViewer Focusable="false" Padding="{TemplateBinding Padding}">
                            <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                        </ScrollViewer>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Background" TargetName="Bd" Value="{StaticResource {x:Static SystemColors.ControlBrushKey}}"/>
                        </Trigger>
                        <Trigger Property="IsGrouping" Value="true">
                            <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type ListBox}" x:Key="typeListBoxStyle">
        <Setter Property="Foreground" Value="White" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListBox}" >
                    <VirtualizingStackPanel Orientation="Vertical" 
                                            Margin="5"
                                            VirtualizingStackPanel.IsVirtualizing="True"
                                            VirtualizingStackPanel.VirtualizationMode="Recycling"
                                            IsItemsHost="True" 
                                            VerticalAlignment="Top"
                                            HorizontalAlignment="Center" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="typeListBoxItemStyle" TargetType="{x:Type commCtrl:ListBoxExItem}">
        <Setter Property="FontSize" Value="20" />
        <Setter Property="Foreground" Value="{StaticResource TextColorBrush_Dim}"/>
        <Setter Property="Background" Value="#F4F4F4"/>
        <Setter Property="BorderBrush" Value="{StaticResource CheckBoxStroke}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="FontFamily" Value="/Resources/迷你简卡通.TTF#迷你简卡通" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type commCtrl:ListBoxExItem}">
                    <Grid Margin="5,0">
                        <Grid x:Name="RadioButton" Height="40" Margin="0" Visibility="Hidden">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="25"/>
                                <ColumnDefinition/>
                                <ColumnDefinition Width="25"/>
                            </Grid.ColumnDefinitions>
                            <Border BorderThickness="1" CornerRadius="18" Grid.ColumnSpan="3">
                                <Border.BorderBrush>
                                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                        <GradientStop Color="#FF2952A3" Offset="0"/>
                                        <GradientStop Color="White" Offset="1"/>
                                    </LinearGradientBrush>
                                </Border.BorderBrush>
                                <Border.Background>
                                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                        <GradientStop Color="#FF4186CB" Offset="0"/>
                                        <GradientStop Color="#FF226DC0" Offset="1"/>
                                    </LinearGradientBrush>
                                </Border.Background>
                            </Border>
                            <Image Source="/SoonLearning.AppCenter;component/Resources/Images/btn_Shadow_01.png" Stretch="Fill"/>
                            <Image Margin="0" Source="/SoonLearning.AppCenter;component/Resources/Images/btn_Shadow_02.png" Stretch="Fill" Grid.Column="1" Width="Auto"/>
                            <Image Source="/SoonLearning.AppCenter;component/Resources/Images/btn_Shadow_03.png" Stretch="Fill" Grid.Column="2"/>

                        </Grid>
                        <TextBlock x:Name="contentPresenter" 
    					        HorizontalAlignment="Center" 
    					        VerticalAlignment="Center" 
    					        RenderTransformOrigin="0.5,0.5"
    					        Text="{TemplateBinding Property=Content}" Style="{StaticResource TextBlockStyle_Head2_NoShadow}" Foreground="#FF175699"
    					        MaxWidth="{TemplateBinding Width}" FontWeight="Bold" Margin="40,0,40,2" Grid.Column="1">

    					<TextBlock.Effect>
    						<DropShadowEffect ShadowDepth="1" Direction="270" Opacity="0"/>
    					</TextBlock.Effect>
                        </TextBlock>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True"/>
                        <Trigger Property="HasContent" Value="true">
                            <Setter Property="FocusVisualStyle" Value="{StaticResource CheckRadioFocusVisual}"/>
                            <Setter Property="Padding" Value="4,0,0,0"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{StaticResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                            <Setter Property="Opacity" TargetName="RadioButton" Value="0.3"/>
                        </Trigger>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter Property="Foreground" TargetName="contentPresenter" Value="White"/>
                            <Setter Property="Visibility" TargetName="RadioButton" Value="Visible"/>
                            <Setter Property="Effect" TargetName="contentPresenter">
                                <Setter.Value>
                                    <DropShadowEffect Direction="270" Opacity="0.4" ShadowDepth="1" />
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="thumbnailListBoxItemStyle" TargetType="{x:Type ListBoxItem}">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="FontFamily" Value="/Resources/迷你简卡通.TTF#迷你简卡通" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListBoxItem}" >
                    <ControlTemplate.Resources>
                        <Storyboard x:Key="Storyboard1">
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="border_H_Copy">
                                <EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="1"/>
                            </DoubleAnimationUsingKeyFrames>

                        </Storyboard>
                        <Storyboard x:Key="Storyboard2">
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="border_H_Copy">
                                <EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="0"/>
                            </DoubleAnimationUsingKeyFrames>

                        </Storyboard>

                        <Storyboard x:Key="Storyboard3">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00.2000000" Storyboard.TargetName="borderGrid" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.2000000" Value="1"/>
                            </DoubleAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00.2000000" Storyboard.TargetName="borderGrid" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.2000000" Value="1"/>
                            </DoubleAnimationUsingKeyFrames>

                        </Storyboard>

                        <Storyboard x:Key="Storyboard4">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00.2000000" Storyboard.TargetName="borderGrid" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.2000000" Value="0.7"/>
                            </DoubleAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00.2000000" Storyboard.TargetName="borderGrid" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.2000000" Value="0.7"/>
                            </DoubleAnimationUsingKeyFrames>

                        </Storyboard>
                    </ControlTemplate.Resources>

                    <Grid x:Name="borderGrid"
                          Margin="8,10"
                          Width="220"
                          Height="200"
                          Opacity="1.0"
                          RenderTransformOrigin="0.5,0.5" Background="#00000000">
                        <Grid.RowDefinitions>
                            <RowDefinition />
                            <RowDefinition Height="38" />
                        </Grid.RowDefinitions>

                        <Grid.RenderTransform>
                            <TransformGroup>
                                <ScaleTransform x:Name="borderScale"/>
                                <SkewTransform/>
                                <RotateTransform/>
                                <TranslateTransform/>
                            </TransformGroup>
                        </Grid.RenderTransform>

                        <Border x:Name="border_H" 
                                Margin="0" 
                                Grid.RowSpan="1"
                                Visibility="Visible" 
                                Grid.ColumnSpan="1" 
                                BorderThickness="3" 
                                CornerRadius="20">
                            <Border.Background>
                                <ImageBrush   ViewportUnits="Absolute" TileMode="Tile"   Viewport="0,0,100,100" Stretch="Uniform"    ImageSource="/SoonLearning.AppCenter;component/Resources/Images/Dialogue_BGTile2.png"/>
                            </Border.Background>
                            <Border.Effect>
                                <DropShadowEffect ShadowDepth="3" Direction="270" Opacity="0.8" />
                            </Border.Effect>
                        </Border>
                        <Border x:Name="border_H_Copy" 
                        	Margin="0" 
                        	Grid.RowSpan="1"
                        	Visibility="Visible" 
                        	Grid.ColumnSpan="1" 
                        	BorderThickness="3" 
                        	CornerRadius="20" Opacity="0">
                            <Border.Background>
                                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                    <GradientStop Color="#FF65DFFF" Offset="0"/>
                                    <GradientStop Color="#FF3CC5FF" Offset="1"/>
                                </LinearGradientBrush>
                            </Border.Background>
                        </Border>
                        <Image Source="/SoonLearning.AppCenter;component/Resources/Images/Item_Shadow.png" Stretch="Fill" Margin="1" Opacity="0.7"/>

                        <Border BorderBrush="White" 
                                Grid.ColumnSpan="1" 
                                Grid.RowSpan="1"
                                Margin="2,2,2,0" 
                                Background="{x:Null}"
                                BorderThickness="3" CornerRadius="20"/>
                        <Border BorderBrush="White" 
                    		Grid.ColumnSpan="1" 
                    		Grid.RowSpan="1"
                    		Margin="2,2,2,-80"
                    		BorderThickness="3" CornerRadius="20" Grid.Row="1" Opacity="0.2">
                            <Border.Background>
                                <ImageBrush   ViewportUnits="Absolute" TileMode="Tile"   Viewport="0,0,100,100" Stretch="Uniform"    ImageSource="/SoonLearning.AppCenter;component/Resources/Images/Dialogue_BGTile2.png"/>
                            </Border.Background>
                            <Border.OpacityMask>
                                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                    <GradientStop Color="Black" Offset="0"/>
                                    <GradientStop Offset="0.328"/>
                                </LinearGradientBrush>
                            </Border.OpacityMask>
                        </Border>

                        <Image Stretch="Uniform"
                    		   x:Name="thumbnailImage"
                               Grid.Row="0"
                               Margin="10"
                    		   Source="{Binding Thumbnail}"/>
                        <Image Stretch="Uniform"
                        	x:Name="thumbnailImage_Copy"
                        	Grid.Row="1"
                        	Margin="10,10,10,-100"
                        	Source="{Binding Thumbnail}" RenderTransformOrigin="0.5,0.5" Opacity="0.2">
                            <Image.RenderTransform>
                                <TransformGroup>
                                    <ScaleTransform ScaleY="-1" ScaleX="1"/>
                                    <SkewTransform AngleY="0" AngleX="0"/>
                                    <RotateTransform Angle="0"/>
                                    <TranslateTransform/>
                                </TransformGroup>
                            </Image.RenderTransform>
                            <Image.OpacityMask>
                                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                    <GradientStop Color="#00000000" Offset="0.78"/>
                                    <GradientStop Color="White" Offset="1"/>
                                </LinearGradientBrush>
                            </Image.OpacityMask>
                        </Image>

                        <TextBlock x:Name="titleTextBlock"
                    			   Text="{Binding Title}" 
                    			   HorizontalAlignment="Center" 
                                   VerticalAlignment="Top"
                    			   FontSize="16"
                                   Grid.Row="1"
                    			  
                    			   Foreground="White" 
                                   d:LayoutOverrides="GridBox" Margin="0,5,0,0" FontFamily="/Resources/迷你简卡通.TTF#迷你简卡通" Style="{StaticResource TextBlockStyle_Head2}"/>
                        <ScrollViewer
                        	Grid.RowSpan="2"
                        	d:LayoutOverrides="Width" ScrollViewer.VerticalScrollBarVisibility="Disabled" Margin="3" >

                            <StackPanel x:Name="descriptionPanel" 
                        		Orientation="Vertical" 
                        		Visibility="Hidden"
                        		Background="#FFE6E6E6"
                        		Opacity="1" RenderTransformOrigin="0.5,0.5" Height="Auto" Width="Auto">
                                <StackPanel.RenderTransform>
                                    <TransformGroup>
                                        <ScaleTransform/>
                                        <SkewTransform/>
                                        <RotateTransform/>
                                        <TranslateTransform Y="154"/>
                                    </TransformGroup>
                                </StackPanel.RenderTransform>
                                <TextBlock x:Name="titleTextBlock_Copy"
                        			Text="{Binding Title}" 
                        			HorizontalAlignment="Left" 
                        			VerticalAlignment="Stretch"
                        			FontSize="16"
                        			 FontFamily="/Resources/迷你简卡通.TTF#迷你简卡通"
                        			Foreground="{StaticResource TextColorBrush_Dim}" 
                        			Margin="20"/>

                                <TextBlock x:Name="titleTextBlock_Copy1"
                        			Text="{Binding Description}" 
                        			HorizontalAlignment="Stretch"
                        			VerticalAlignment="Center"  
                        			FontSize="15"
                        			TextWrapping="Wrap"
                        			FontWeight="Medium"
                        			Foreground="{StaticResource TextColorBrush_Grey}"
                        			Margin="20,0,20,20"/>

                            </StackPanel>
                        </ScrollViewer>
                        <Image Height="54" Source="/SoonLearning.AppCenter;component/Resources/Images/Item_Specular.png" Stretch="Fill" VerticalAlignment="Top" Margin="0,4,0,0"/>

                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsSelected" Value="True"/>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Trigger.ExitActions>
                                <BeginStoryboard x:Name="Storyboard2_BeginStoryboard" Storyboard="{StaticResource Storyboard2}"/>
                            </Trigger.ExitActions>
                            <Trigger.EnterActions>
                                <BeginStoryboard Storyboard="{StaticResource Storyboard1}"/>
                            </Trigger.EnterActions>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="appListBoxItemStyle" TargetType="{x:Type ListBoxItem}">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="FontFamily" Value="/Resources/迷你简卡通.TTF#迷你简卡通" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListBoxItem}" >
                    <ControlTemplate.Resources>
                        <Storyboard x:Key="Storyboard1">
                        	<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="border_H_Copy">
                        		<EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="1"/>
                        	</DoubleAnimationUsingKeyFrames>
                        
                        </Storyboard>
                        <Storyboard x:Key="Storyboard2">
                        	<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="border_H_Copy">
                        		<EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="0"/>
                        	</DoubleAnimationUsingKeyFrames>
                          
                        </Storyboard>

                        <Storyboard x:Key="Storyboard3">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00.2000000" Storyboard.TargetName="borderGrid" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.2000000" Value="1"/>
                            </DoubleAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00.2000000" Storyboard.TargetName="borderGrid" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.2000000" Value="1"/>
                            </DoubleAnimationUsingKeyFrames>
                     
                        </Storyboard>

                        <Storyboard x:Key="Storyboard4">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00.2000000" Storyboard.TargetName="borderGrid" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.2000000" Value="0.7"/>
                            </DoubleAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00.2000000" Storyboard.TargetName="borderGrid" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.2000000" Value="0.7"/>
                            </DoubleAnimationUsingKeyFrames>
                            
                        </Storyboard>
                    </ControlTemplate.Resources>

                    <Grid x:Name="borderGrid"
                          Margin="8,10"
                          Width="220"
                          Height="200"
                          Opacity="1.0"
                          RenderTransformOrigin="0.5,0.5" Background="#00000000">
                        <Grid.RowDefinitions>
                            <RowDefinition />
                            <RowDefinition Height="38" />
                        </Grid.RowDefinitions>

                        <Grid.RenderTransform>
                            <TransformGroup>
                                <ScaleTransform x:Name="borderScale"/>
                                <SkewTransform/>
                                <RotateTransform/>
                                <TranslateTransform/>
                            </TransformGroup>
                        </Grid.RenderTransform>               
  
                        <Border x:Name="border_H" 
                                Margin="0" 
                                Grid.RowSpan="1"
                                Visibility="Visible" 
                                Grid.ColumnSpan="1" 
                                BorderThickness="3" 
                                CornerRadius="20">
                        	<Border.Background>
                        		<ImageBrush   ViewportUnits="Absolute" TileMode="Tile"   Viewport="0,0,100,100" Stretch="Uniform"    ImageSource="/SoonLearning.AppCenter;component/Resources/Images/Dialogue_BGTile2.png"/>
                        	</Border.Background>
                            <Border.Effect>
                                <DropShadowEffect ShadowDepth="3" Direction="270" Opacity="0.8" />
                            </Border.Effect>
                        </Border>
                        <Border x:Name="border_H_Copy" 
                        	Margin="0" 
                        	Grid.RowSpan="1"
                        	Visibility="Visible" 
                        	Grid.ColumnSpan="1" 
                        	BorderThickness="3" 
                        	CornerRadius="20" Opacity="0">
                        	<Border.Background>
                        		<LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                        			<GradientStop Color="#FF65DFFF" Offset="0"/>
                        			<GradientStop Color="#FF3CC5FF" Offset="1"/>
                        		</LinearGradientBrush>
                        	</Border.Background>
                        </Border>
                        <Image Source="/SoonLearning.AppCenter;component/Resources/Images/Item_Shadow.png" Stretch="Fill" Margin="1" Opacity="0.7"/>

                    	<Border BorderBrush="White" 
                                Grid.ColumnSpan="1" 
                                Grid.RowSpan="1"
                                Margin="2,2,2,0" 
                                Background="{x:Null}"
                                BorderThickness="3" CornerRadius="20"/>
                    	<Border BorderBrush="White" 
                    		Grid.ColumnSpan="1" 
                    		Grid.RowSpan="1"
                    		Margin="2,2,2,-80"
                    		BorderThickness="3" CornerRadius="20" Grid.Row="1" Opacity="0.2">
                    		<Border.Background>
                        		<ImageBrush   ViewportUnits="Absolute" TileMode="Tile"   Viewport="0,0,100,100" Stretch="Uniform"    ImageSource="/SoonLearning.AppCenter;component/Resources/Images/Dialogue_BGTile2.png"/>
                        	</Border.Background>
                    		<Border.OpacityMask>
                    			<LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                    				<GradientStop Color="Black" Offset="0"/>
                    				<GradientStop Offset="0.328"/>
                    			</LinearGradientBrush>
                    		</Border.OpacityMask>
                    	</Border>

                        <Image Stretch="Uniform"
                    		   x:Name="thumbnailImage"
                               Grid.Row="0"
                               Margin="10"
                    		   Source="{Binding Thumbnail}"/>
                        <Image Stretch="Uniform"
                        	x:Name="thumbnailImage_Copy"
                        	Grid.Row="1"
                        	Margin="10,10,10,-100"
                        	Source="{Binding Thumbnail}" RenderTransformOrigin="0.5,0.5" Opacity="0.2">
                        	<Image.RenderTransform>
                        		<TransformGroup>
                        			<ScaleTransform ScaleY="-1" ScaleX="1"/>
                        			<SkewTransform AngleY="0" AngleX="0"/>
                        			<RotateTransform Angle="0"/>
                        			<TranslateTransform/>
                        		</TransformGroup>
                        	</Image.RenderTransform>
                        	<Image.OpacityMask>
                        		<LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                        			<GradientStop Color="#00000000" Offset="0.78"/>
                        			<GradientStop Color="White" Offset="1"/>
                        		</LinearGradientBrush>
                        	</Image.OpacityMask>
                        </Image>

                        <TextBlock x:Name="titleTextBlock"
                    			   Text="{Binding Title}" 
                    			   HorizontalAlignment="Center" 
                                   VerticalAlignment="Top"
                    			   FontSize="16"
                                   Grid.Row="1"
                    			  
                    			   Foreground="White" 
                                   d:LayoutOverrides="GridBox" Margin="0,5,0,0" FontFamily="/Resources/迷你简卡通.TTF#迷你简卡通" Style="{StaticResource TextBlockStyle_Head2}"/>
                        <ScrollViewer
                        	Grid.RowSpan="2"
                        	d:LayoutOverrides="Width" ScrollViewer.VerticalScrollBarVisibility="Disabled" Margin="3" >

                        	<StackPanel x:Name="descriptionPanel" 
                        		Orientation="Vertical" 
                        		Visibility="Hidden"
                        		Background="#FFE6E6E6"
                        		Opacity="1" RenderTransformOrigin="0.5,0.5" Height="Auto" Width="Auto">
                        		<StackPanel.RenderTransform>
                        			<TransformGroup>
                        				<ScaleTransform/>
                        				<SkewTransform/>
                        				<RotateTransform/>
                        				<TranslateTransform Y="154"/>
                        			</TransformGroup>
                        		</StackPanel.RenderTransform>
                        		<TextBlock x:Name="titleTextBlock_Copy"
                        			Text="{Binding Title}" 
                        			HorizontalAlignment="Left" 
                        			VerticalAlignment="Stretch"
                        			FontSize="16"
                        			 FontFamily="/Resources/迷你简卡通.TTF#迷你简卡通"
                        			Foreground="{StaticResource TextColorBrush_Dim}" 
                        			Margin="20"/>
                    		
                        		<TextBlock x:Name="titleTextBlock_Copy1"
                        			Text="{Binding Description}" 
                        			HorizontalAlignment="Stretch"
                        			VerticalAlignment="Center"  
                        			FontSize="15"
                        			TextWrapping="Wrap"
                        			FontWeight="Medium"
                        			Foreground="{StaticResource TextColorBrush_Grey}"
                        			Margin="20,0,20,20"/>
                    		
                        	</StackPanel>
                        </ScrollViewer>
                        <Image Height="54" Source="/SoonLearning.AppCenter;component/Resources/Images/Item_Specular.png" Stretch="Fill" VerticalAlignment="Top" Margin="0,4,0,0"/>
                 
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsSelected" Value="True"/>
                        <Trigger Property="IsMouseOver" Value="True">
                        	<Trigger.ExitActions>
                        		<BeginStoryboard x:Name="Storyboard2_BeginStoryboard" Storyboard="{StaticResource Storyboard2}"/>
                        	</Trigger.ExitActions>
                        	<Trigger.EnterActions>
                        		<BeginStoryboard Storyboard="{StaticResource Storyboard1}"/>
                        	</Trigger.EnterActions>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <DataTemplate DataType="{x:Type appData:AppItem}">
        <DataTemplate.Resources>
            <Storyboard x:Key="Storyboard1">
                <DoubleAnimation To="0.85"
                                Duration="00:00:00.2000000"
                                Storyboard.TargetName="borderGrid"
                                Storyboard.TargetProperty="Opacity" />
                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.Y)" Storyboard.TargetName="descriptionPanel">
                    <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="0"/>
                </DoubleAnimationUsingKeyFrames>
            </Storyboard>
            <Storyboard x:Key="Storyboard2">
                <DoubleAnimation To="1"
                                Duration="00:00:00.2000000"
                                Storyboard.TargetName="borderGrid"
                                Storyboard.TargetProperty="Opacity" />
                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.Y)" Storyboard.TargetName="descriptionPanel">
                    <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="155"/>
                </DoubleAnimationUsingKeyFrames>
            </Storyboard>

        </DataTemplate.Resources>
        
        <Grid x:Name="borderGrid"
                Margin="0"
                Width="200"
                Height="158"
                Opacity="1.0"
                RenderTransformOrigin="0.5,0.5" Background="#00000000">
            <Grid.RowDefinitions>
                <RowDefinition />
                <RowDefinition Height="38" />
            </Grid.RowDefinitions>

            <Grid.RenderTransform>
                <TransformGroup>
                    <ScaleTransform x:Name="borderScale"/>
                    <SkewTransform/>
                    <RotateTransform/>
                    <TranslateTransform/>
                </TransformGroup>
            </Grid.RenderTransform>

            <Border x:Name="border_H" 
                    Margin="0" 
                    Grid.RowSpan="2"
                    Visibility="Hidden" 
                    Grid.ColumnSpan="1" 
                    BorderBrush="{StaticResource Brush_BorderH}" 
                    BorderThickness="2" 
                    CornerRadius="2"/>

            <Border BorderBrush="#19000000" 
                    Grid.ColumnSpan="1" 
                    Grid.RowSpan="2"
                    Margin="2" 
                    Background="White"
                    BorderThickness="1"/>

            <Image Stretch="Uniform"
                    x:Name="thumbnailImage"
                    Grid.Row="0"
                    Margin="25,10"
                    Source="{Binding Thumbnail}"/>

            <TextBlock x:Name="titleTextBlock"
                    	Text="{Binding Title}" 
                    	HorizontalAlignment="Left" 
                        VerticalAlignment="Top"
                    	FontSize="16"
                        Grid.Row="1"	  
                    	Foreground="{StaticResource TextColorBrush_Dim}" 
                        d:LayoutOverrides="GridBox" Margin="20,0,0,0" FontFamily="/Resources/迷你简卡通.TTF#迷你简卡通"/>
            <ScrollViewer
                Grid.RowSpan="2"
                d:LayoutOverrides="Width" ScrollViewer.VerticalScrollBarVisibility="Disabled" Margin="3" >

                <StackPanel x:Name="descriptionPanel" 
                    Orientation="Vertical" 
                    Visibility="Visible"
                    Background="#FFE6E6E6"
                    Opacity="1" RenderTransformOrigin="0.5,0.5" Height="Auto" Width="Auto">
                    <StackPanel.RenderTransform>
                        <TransformGroup>
                            <ScaleTransform/>
                            <SkewTransform/>
                            <RotateTransform/>
                            <TranslateTransform Y="154"/>
                        </TransformGroup>
                    </StackPanel.RenderTransform>
                    <TextBlock x:Name="titleTextBlock_Copy"
                        Text="{Binding Title}" 
                        HorizontalAlignment="Left" 
                        VerticalAlignment="Stretch"
                        FontSize="16"
                        	FontFamily="/Resources/迷你简卡通.TTF#迷你简卡通"
                        Foreground="{StaticResource TextColorBrush_Dim}" 
                        Margin="20"/>

                    <TextBlock x:Name="titleTextBlock_Copy1"
                            Text="{Binding Description}" 
                            HorizontalAlignment="Stretch"
                            VerticalAlignment="Center"  
                            FontSize="15"
                            TextWrapping="Wrap"
                            FontWeight="Medium"
                            Foreground="{StaticResource TextColorBrush_Grey}"
                            Margin="20,0,20,20"/>

                </StackPanel>
            </ScrollViewer>

        </Grid>
        
        <DataTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Trigger.ExitActions>
                    <BeginStoryboard x:Name="Storyboard2_BeginStoryboard" Storyboard="{StaticResource Storyboard2}"/>
                </Trigger.ExitActions>
                <Trigger.EnterActions>
                    <BeginStoryboard Storyboard="{StaticResource Storyboard1}"/>
                </Trigger.EnterActions>
            </Trigger>
        </DataTemplate.Triggers>

    </DataTemplate>

    <DataTemplate DataType="{x:Type appData:MemorizeAppItem}">
        <DataTemplate.Resources>
            <Storyboard x:Key="Storyboard1">
                <DoubleAnimation To="0.85"
                                Duration="00:00:00.2000000"
                                Storyboard.TargetName="borderGrid"
                                Storyboard.TargetProperty="Opacity" />
                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.Y)" Storyboard.TargetName="descriptionPanel">
                    <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="0"/>
                </DoubleAnimationUsingKeyFrames>
            </Storyboard>
            <Storyboard x:Key="Storyboard2">
                <DoubleAnimation To="1"
                                Duration="00:00:00.2000000"
                                Storyboard.TargetName="borderGrid"
                                Storyboard.TargetProperty="Opacity" />
                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.Y)" Storyboard.TargetName="descriptionPanel">
                    <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="155"/>
                </DoubleAnimationUsingKeyFrames>
            </Storyboard>

        </DataTemplate.Resources>

        <Grid x:Name="borderGrid"
                Margin="0"
                Width="122"
                Height="79"
                Opacity="1.0"
                RenderTransformOrigin="0.5,0.5" Background="#00000000">
            <Grid.RowDefinitions>
                <RowDefinition />
                <RowDefinition Height="30" />
            </Grid.RowDefinitions>

            <Grid.RenderTransform>
                <TransformGroup>
                    <ScaleTransform x:Name="borderScale"/>
                    <SkewTransform/>
                    <RotateTransform/>
                    <TranslateTransform/>
                </TransformGroup>
            </Grid.RenderTransform>

            <Border x:Name="border_H" 
                    Margin="0" 
                    Grid.RowSpan="2"
                    Visibility="Hidden" 
                    Grid.ColumnSpan="1" 
                    BorderBrush="{StaticResource Brush_BorderH}" 
                    BorderThickness="2" 
                    CornerRadius="2"/>

            <Border BorderBrush="#19000000" 
                    Grid.ColumnSpan="1" 
                    Grid.RowSpan="2"
                    Margin="2" 
                    Background="White"
                    BorderThickness="1"/>

            <Image Stretch="Uniform"
                   x:Name="thumbnailImage"
                   Grid.Row="1"
                   Margin="10,0,0,5"
                   HorizontalAlignment="Left"
                   Source="{Binding Thumbnail}"/>

            <TextBlock x:Name="titleTextBlock"
                       Text="{Binding Title}" 
                       HorizontalAlignment="Left" 
                       VerticalAlignment="Top"
                       TextWrapping="Wrap"
                       FontSize="14"
                       Grid.Row="0"	  
                       Foreground="{StaticResource TextColorBrush_Dim}" 
                       d:LayoutOverrides="GridBox"
                       Margin="5,8,5,5"
                       FontFamily="/Resources/迷你简卡通.TTF#迷你简卡通"/>
            <ScrollViewer Grid.RowSpan="2"
                          d:LayoutOverrides="Width" 
                          ScrollViewer.VerticalScrollBarVisibility="Disabled" 
                          Margin="3" >

                <StackPanel x:Name="descriptionPanel" 
                            Orientation="Vertical" 
                            Visibility="Visible"
                            Background="#FFE6E6E6"
                            Opacity="1"
                            RenderTransformOrigin="0.5,0.5" 
                            Height="Auto" 
                            Width="Auto">
                    <StackPanel.RenderTransform>
                        <TransformGroup>
                            <ScaleTransform/>
                            <SkewTransform/>
                            <RotateTransform/>
                            <TranslateTransform Y="154"/>
                        </TransformGroup>
                    </StackPanel.RenderTransform>
                    <TextBlock x:Name="titleTextBlock_Copy"
                               Text="{Binding Title}" 
                               HorizontalAlignment="Left" 
                               VerticalAlignment="Stretch"
                               FontSize="12"
                               TextWrapping="Wrap"
                        	   FontFamily="/Resources/迷你简卡通.TTF#迷你简卡通"
                               Foreground="{StaticResource TextColorBrush_Dim}" 
                               Margin="5,8,5,5"/>

                    <TextBlock x:Name="titleTextBlock_Copy1"
                               Text="{Binding Description}" 
                               HorizontalAlignment="Stretch"
                               VerticalAlignment="Center"  
                               FontSize="10"
                               TextWrapping="Wrap"
                               FontWeight="Medium"
                               Foreground="{StaticResource TextColorBrush_Grey}"
                               Margin="5"/>

                </StackPanel>
            </ScrollViewer>

        </Grid>

        <DataTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Trigger.ExitActions>
                    <BeginStoryboard x:Name="Storyboard2_BeginStoryboard" Storyboard="{StaticResource Storyboard2}"/>
                </Trigger.ExitActions>
                <Trigger.EnterActions>
                    <BeginStoryboard Storyboard="{StaticResource Storyboard1}"/>
                </Trigger.EnterActions>
            </Trigger>
        </DataTemplate.Triggers>

    </DataTemplate>

    <DataTemplate DataType="{x:Type appData:MathFastAppItem}">
        <DataTemplate.Resources>
            <Storyboard x:Key="Storyboard1">
                <DoubleAnimation To="0.85"
                                Duration="00:00:00.2000000"
                                Storyboard.TargetName="borderGrid"
                                Storyboard.TargetProperty="Opacity" />
                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.Y)" Storyboard.TargetName="descriptionPanel">
                    <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="0"/>
                </DoubleAnimationUsingKeyFrames>
            </Storyboard>
            <Storyboard x:Key="Storyboard2">
                <DoubleAnimation To="1"
                                Duration="00:00:00.2000000"
                                Storyboard.TargetName="borderGrid"
                                Storyboard.TargetProperty="Opacity" />
                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.Y)" Storyboard.TargetName="descriptionPanel">
                    <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="155"/>
                </DoubleAnimationUsingKeyFrames>
            </Storyboard>

        </DataTemplate.Resources>

        <Grid x:Name="borderGrid"
                Margin="0"
                Width="122"
                Height="79"
                Opacity="1.0"
                RenderTransformOrigin="0.5,0.5" Background="#00000000">
            <Grid.RowDefinitions>
                <RowDefinition />
                <RowDefinition Height="30" />
            </Grid.RowDefinitions>

            <Grid.RenderTransform>
                <TransformGroup>
                    <ScaleTransform x:Name="borderScale"/>
                    <SkewTransform/>
                    <RotateTransform/>
                    <TranslateTransform/>
                </TransformGroup>
            </Grid.RenderTransform>

            <Border x:Name="border_H" 
                    Margin="0" 
                    Grid.RowSpan="2"
                    Visibility="Hidden" 
                    Grid.ColumnSpan="1" 
                    BorderBrush="{StaticResource Brush_BorderH}" 
                    BorderThickness="2" 
                    CornerRadius="2"/>

            <Border BorderBrush="#19000000" 
                    Grid.ColumnSpan="1" 
                    Grid.RowSpan="2"
                    Margin="2" 
                    Background="White"
                    BorderThickness="1"/>

            <!--<Image Stretch="Uniform"
                   x:Name="thumbnailImage"
                   Grid.Row="1"
                   Margin="10,0,0,5"
                   HorizontalAlignment="Left"
                   Source="{Binding Thumbnail}">
            </Image>-->
            
            <TextBlock Grid.Row="1"
                       Margin="10, 0, 0, 5"
                       HorizontalAlignment="Left"
                       Foreground="Red"
                       FontSize="14"
                       VerticalAlignment="Bottom"
                       TextWrapping="Wrap"
                       FontFamily="/Resources/迷你简卡通.TTF#迷你简卡通"
                       Text="速算" />

            <TextBlock x:Name="titleTextBlock"
                       Text="{Binding Title}" 
                       HorizontalAlignment="Left" 
                       VerticalAlignment="Top"
                       TextWrapping="Wrap"
                       FontSize="12"
                       Grid.Row="0"	  
                       Foreground="{StaticResource TextColorBrush_Dim}" 
                       d:LayoutOverrides="GridBox"
                       Margin="8,8,8,5"
                       FontFamily="/Resources/迷你简卡通.TTF#迷你简卡通"/>
            <ScrollViewer Grid.RowSpan="2"
                          d:LayoutOverrides="Width" 
                          ScrollViewer.VerticalScrollBarVisibility="Disabled" 
                          Margin="3" >

                <StackPanel x:Name="descriptionPanel" 
                            Orientation="Vertical" 
                            Visibility="Visible"
                            Background="#FFE6E6E6"
                            Opacity="1" 
                            RenderTransformOrigin="0.5,0.5"
                            Height="Auto"
                            Width="Auto">
                    <StackPanel.RenderTransform>
                        <TransformGroup>
                            <ScaleTransform/>
                            <SkewTransform/>
                            <RotateTransform/>
                            <TranslateTransform Y="154"/>
                        </TransformGroup>
                    </StackPanel.RenderTransform>
                    <TextBlock x:Name="titleTextBlock_Copy"
                               Text="{Binding Title}" 
                               HorizontalAlignment="Left" 
                               VerticalAlignment="Stretch"
                               FontSize="12"
                               TextWrapping="Wrap"
                        	   FontFamily="/Resources/迷你简卡通.TTF#迷你简卡通"
                               Foreground="{StaticResource TextColorBrush_Dim}" 
                               Margin="8,8,8,5"/>

                    <TextBlock x:Name="titleTextBlock_Copy1"
                               Text="{Binding Description}" 
                               HorizontalAlignment="Stretch"
                               VerticalAlignment="Center"  
                               FontSize="10"
                               TextWrapping="Wrap"
                               FontWeight="Medium"
                               Foreground="{StaticResource TextColorBrush_Grey}"
                               Margin="5"/>

                </StackPanel>
            </ScrollViewer>

        </Grid>

        <DataTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Trigger.ExitActions>
                    <BeginStoryboard x:Name="Storyboard2_BeginStoryboard" Storyboard="{StaticResource Storyboard2}"/>
                </Trigger.ExitActions>
                <Trigger.EnterActions>
                    <BeginStoryboard Storyboard="{StaticResource Storyboard1}"/>
                </Trigger.EnterActions>
            </Trigger>
        </DataTemplate.Triggers>

    </DataTemplate>

    <Style TargetType="{x:Type ListViewItem}">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="HorizontalContentAlignment" Value="Left" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Foreground" Value="{StaticResource TextColorBrush_Dark}" />
        <Setter Property="Margin" Value="0,0,0,0" />
        <Setter Property="Height" Value="40" />
        <Setter Property="FontSize" Value="16" />
        <Setter Property="FontWeight" Value="Medium" />
        <Setter Property="FontFamily" Value="/Resources/迷你简卡通.TTF#迷你简卡通" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListViewItem}">
                    <ControlTemplate.Resources>
                        <Storyboard x:Key="Storyboard1">
                            <ColorAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="border" Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)">
                                <SplineColorKeyFrame KeyTime="00:00:00.2000000" Value="#FFEB7700"/>
                            </ColorAnimationUsingKeyFrames>
                            <ColorAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="border" Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)">
                                <SplineColorKeyFrame KeyTime="00:00:00.2000000" Value="#FFEB7700"/>
                            </ColorAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="Storyboard2">
                            <ColorAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="border" Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)">
                                <SplineColorKeyFrame KeyTime="00:00:00.2000000" Value="Transparent"/>
                            </ColorAnimationUsingKeyFrames>
                            <ColorAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="border" Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)">
                                <SplineColorKeyFrame KeyTime="00:00:00.2000000" Value="Transparent"/>
                            </ColorAnimationUsingKeyFrames>
                        </Storyboard>
                    </ControlTemplate.Resources>
                    <Grid Width="Auto"
                        Height="Auto"
                        x:Name="Button_Normal"
                        Opacity="1"
                        RenderTransformOrigin="0.5, 0.5">
                        <Grid.RenderTransform>
                            <ScaleTransform ScaleX="1" ScaleY="1" />
                        </Grid.RenderTransform>
                        <Border x:Name="border" BorderBrush="Transparent" BorderThickness="1"/>
                        <GridViewRowPresenter x:Name="contentPresenter"
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <!--<Setter Property="Foreground" TargetName="border" Value="White" />
                            <Setter Property="Background" TargetName="border" Value="#FFEB7700" />-->
                        </Trigger>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter Property="Foreground" Value="White" />
                            <Setter Property="Background" TargetName="border" Value="#FFEB7700" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="{x:Type ListView}" TargetType="{x:Type ListView}">
        <Setter Property="SnapsToDevicePixels" Value="true"/>
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListView}">
                    <Border x:Name="Border" BorderThickness="3" Background="#4C1B1B1B" CornerRadius="12">
                    	<Border.BorderBrush>
                    		<LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                    			<GradientStop Color="#FF353F2D" Offset="0"/>
                    			<GradientStop Color="#FF454942" Offset="1"/>
                    		</LinearGradientBrush>
                    	</Border.BorderBrush>
                        <ScrollViewer Style="{StaticResource ScrollViewerStyle_ListViewHeader}" Margin="5">
                            <ItemsPresenter />
                        </ScrollViewer>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsGrouping" Value="true">
                            <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter TargetName="Border" Property="Background" Value="#BBBBBB"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ListBoxStyle_Navigation" TargetType="{x:Type ListBox}">
        <Setter Property="Background" Value="{StaticResource {x:Static SystemColors.WindowBrushKey}}"/>
        <Setter Property="BorderBrush" Value="{StaticResource ListBorder}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Foreground" Value="{StaticResource {x:Static SystemColors.ControlTextBrushKey}}"/>
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
        <Setter Property="ScrollViewer.PanningMode" Value="Both"/>
        <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListBox}">
                    <Grid>
                        <Border x:Name="Bd" Padding="1" SnapsToDevicePixels="true" Height="40" VerticalAlignment="Top" Background="#FF517CAD" Visibility="Hidden"/>
                        <ScrollViewer Focusable="false" Padding="{TemplateBinding Padding}" Template="{StaticResource ScrollViewerControlTemplate_MainContent}">
                            <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" Margin="0"/>
                        </ScrollViewer>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Background" TargetName="Bd" Value="{StaticResource {x:Static SystemColors.ControlBrushKey}}"/>
                        </Trigger>
                        <Trigger Property="IsGrouping" Value="true">
                            <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <ItemsPanelTemplate x:Key="ItemsPanelTemplate_ListBoxNavigation">
        <StackPanel Orientation="Horizontal"/>
    </ItemsPanelTemplate>
   
   
   
    <!--<Style x:Key="ListBoxItemStyle_Navigation" TargetType="{x:Type ListBoxItem}">
        <Setter Property="FontSize" Value="30"/>
        <Setter Property="Foreground" Value="#333e1b"/>
        <Setter Property="FontFamily" Value="/SoonLearning.AppCenter;component/Resources/#迷你简细等线"/>
	    <Setter Property="Background" Value="Transparent"/>
        <Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
        <Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
        <Setter Property="Padding" Value="2,0,0,0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListBoxItem}">
                    <Grid Height="Auto" Margin="30,0">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="80"/>
                            <RowDefinition Height="0.3*"/>
                        </Grid.RowDefinitions>
                        <ContentPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" Grid.Row="1" Margin="0"/>
                        <ContentPresenter HorizontalAlignment="Stretch"  Content="{TemplateBinding Tag}" Margin="0">
						
					
					</ContentPresenter>
						
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsSelected" Value="true">
                            <Setter Property="Foreground" Value="White"/>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="true"/>
                                <Condition Property="Selector.IsSelectionActive" Value="false"/>
                            </MultiTrigger.Conditions>
                        </MultiTrigger>
                        <Trigger Property="IsEnabled" Value="false"/>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>-->

    <Style x:Key="subTypeListBoxItemStyle" TargetType="{x:Type ListBoxItem}">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListBoxItem}" >
                    <ControlTemplate.Resources>
                        <Storyboard x:Key="Storyboard1">
                            <DoubleAnimation To="0.85"
                                             Duration="00:00:00.2000000"
                                             Storyboard.TargetName="borderGrid"
                                             Storyboard.TargetProperty="Opacity" />
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.Y)" Storyboard.TargetName="descriptionPanel">
                                <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="0"/>
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="Storyboard2">
                            <DoubleAnimation To="1"
                                             Duration="00:00:00.2000000"
                                             Storyboard.TargetName="borderGrid"
                                             Storyboard.TargetProperty="Opacity" />
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.Y)" Storyboard.TargetName="descriptionPanel">
                                <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="155"/>
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>

                        <Storyboard x:Key="Storyboard3">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00.2000000" Storyboard.TargetName="borderGrid" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.2000000" Value="1"/>
                            </DoubleAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00.2000000" Storyboard.TargetName="borderGrid" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.2000000" Value="1"/>
                            </DoubleAnimationUsingKeyFrames>

                        </Storyboard>

                        <Storyboard x:Key="Storyboard4">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00.2000000" Storyboard.TargetName="borderGrid" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.2000000" Value="0.7"/>
                            </DoubleAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00.2000000" Storyboard.TargetName="borderGrid" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.2000000" Value="0.7"/>
                            </DoubleAnimationUsingKeyFrames>

                        </Storyboard>
                    </ControlTemplate.Resources>

                    <Grid x:Name="borderGrid"
                          Margin="0"
                          Width="200"
                          Height="158"
                          Opacity="1.0"
                          RenderTransformOrigin="0.5,0.5" Background="#00000000">
                        <Grid.RowDefinitions>
                            <RowDefinition />
                            <RowDefinition Height="38" />
                        </Grid.RowDefinitions>

                        <Grid.RenderTransform>
                            <TransformGroup>
                                <ScaleTransform x:Name="borderScale"/>
                                <SkewTransform/>
                                <RotateTransform/>
                                <TranslateTransform/>
                            </TransformGroup>
                        </Grid.RenderTransform>

                        <Border x:Name="border_H" 
                                Margin="0" 
                                Grid.RowSpan="2"
                                Visibility="Hidden" 
                                Grid.ColumnSpan="1" 
                                BorderBrush="{StaticResource Brush_BorderH}" 
                                BorderThickness="2" 
                                CornerRadius="2"/>

                        <Border BorderBrush="#19000000" 
                                Grid.ColumnSpan="1" 
                                Grid.RowSpan="2"
                                Margin="2" 
                                Background="White"
                                BorderThickness="1"/>

                        <Image Stretch="Uniform"
                    		   x:Name="thumbnailImage"
                               Grid.Row="0"
                               Margin="25,10"
                    		   Source="{Binding Thumbnail}"/>

                        <TextBlock x:Name="titleTextBlock"
                    			   Text="{Binding Title}" 
                    			   HorizontalAlignment="Left" 
                                   VerticalAlignment="Top"
                    			   FontSize="16"
                                   Grid.Row="1"
                    			  
                    			   Foreground="{StaticResource TextColorBrush_Dim}" 
                                   d:LayoutOverrides="GridBox" Margin="20,0,0,0" FontFamily="/Resources/迷你简卡通.TTF#迷你简卡通"/>
                        <ScrollViewer
                        	Grid.RowSpan="2"
                        	d:LayoutOverrides="Width" ScrollViewer.VerticalScrollBarVisibility="Disabled" Margin="3" >

                            <StackPanel x:Name="descriptionPanel" 
                        		Orientation="Vertical" 
                        		Visibility="Visible"
                        		Background="#FFE6E6E6"
                        		Opacity="1" RenderTransformOrigin="0.5,0.5" Height="Auto" Width="Auto">
                                <StackPanel.RenderTransform>
                                    <TransformGroup>
                                        <ScaleTransform/>
                                        <SkewTransform/>
                                        <RotateTransform/>
                                        <TranslateTransform Y="154"/>
                                    </TransformGroup>
                                </StackPanel.RenderTransform>
                                <TextBlock x:Name="titleTextBlock_Copy"
                        			       Text="{Binding Title}" 
                        			       HorizontalAlignment="Left" 
                        			       VerticalAlignment="Stretch"
                        			       FontSize="18"
                        			       FontFamily="/Resources/迷你简卡通.TTF#迷你简卡通"
                        			       Foreground="{StaticResource TextColorBrush_Dim}" 
                        			       Margin="20"/>

                                <TextBlock x:Name="titleTextBlock_Copy1"
                        			       Text="{Binding Description}" 
                        			       HorizontalAlignment="Stretch"
                        			       VerticalAlignment="Center"  
                        			       FontSize="15"
                        			       TextWrapping="Wrap"
                        			       FontWeight="Medium"
                        			       Foreground="{StaticResource TextColorBrush_Grey}"
                        			       Margin="20,0,20,20"/>

                            </StackPanel>
                        </ScrollViewer>

                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsSelected" Value="True"/>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Trigger.ExitActions>
                                <BeginStoryboard x:Name="Storyboard2_BeginStoryboard" Storyboard="{StaticResource Storyboard2}"/>
                            </Trigger.ExitActions>
                            <Trigger.EnterActions>
                                <BeginStoryboard Storyboard="{StaticResource Storyboard1}"/>
                            </Trigger.EnterActions>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ListBoxItemStyle_Navigation" TargetType="{x:Type ListBoxItem}">
        <Setter Property="FontSize" Value="30"/>
        <Setter Property="Foreground" Value="#333e1b"/>
        <Setter Property="FontFamily" Value="/Resources/迷你简卡通.TTF#迷你简卡通"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
        <Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
        <Setter Property="Padding" Value="2,0,0,0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListBoxItem}">
                    <Grid Height="Auto" Margin="30,0">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="80"/>
                            <RowDefinition Height="0.3*"/>
                        </Grid.RowDefinitions>
                        <ContentPresenter HorizontalAlignment="Stretch"  Content="{Binding Title}" Margin="0"/>

                        <!--<ContentPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" Grid.Row="1" Margin="0"/>-->
                        <ListBox Grid.Row="1"
                                 ItemsSource="{Binding SubTypeItems}"
                                 ItemsPanel="{StaticResource subTypePanelTemplate}"
                                 ItemContainerStyle="{StaticResource subTypeListBoxItemStyle}"
                                 Style="{StaticResource ListBoxStyle_SubGroup}"
                                 ScrollViewer.HorizontalScrollBarVisibility="Auto"
                                 ScrollViewer.VerticalScrollBarVisibility="Disabled"
                                 Foreground="{x:Null}" 
                                 Background="Transparent"
                                 BorderThickness="0"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsSelected" Value="true">
                            <Setter Property="Foreground" Value="White"/>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="true"/>
                                <Condition Property="Selector.IsSelectionActive" Value="false"/>
                            </MultiTrigger.Conditions>
                        </MultiTrigger>
                        <Trigger Property="IsEnabled" Value="false"/>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <ItemsPanelTemplate x:Key="subTypePanelTemplate_Horizontal">
    	<WrapPanel Margin="1"
    		IsItemsHost="True"
    		Orientation="Horizontal" 
    		HorizontalAlignment="Left"/>
    </ItemsPanelTemplate>
    
    <Style x:Key="appSnapshotItemStyle" TargetType="{x:Type ListBoxItem}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListBoxItem}">
                    <Grid Height="Auto" Margin="10">
                        <Image Source="{Binding ImageUrl}"
                               MaxHeight="300"
                               VerticalAlignment="Center"/>
                    </Grid>
                    
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="ListBoxStyle_ThumbnailList" TargetType="{x:Type ListBox}">
        <Setter Property="Background" Value="{StaticResource {x:Static SystemColors.WindowBrushKey}}"/>
    	<Setter Property="BorderBrush" Value="{StaticResource ListBorder}"/>
    	<Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Foreground" Value="{StaticResource {x:Static SystemColors.ControlTextBrushKey}}"/>
    	<Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
    	<Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
    	<Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
    	<Setter Property="ScrollViewer.PanningMode" Value="Both"/>
    	<Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
    	<Setter Property="VerticalContentAlignment" Value="Center"/>
    	<Setter Property="Template">
    		<Setter.Value>
    			<ControlTemplate TargetType="{x:Type ListBox}">
    				<Border x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="1" SnapsToDevicePixels="true">
    					<ScrollViewer Focusable="false" Padding="{TemplateBinding Padding}">
    						<ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" Margin="0,0,0,100"/>
    					</ScrollViewer>
    				</Border>
    				<ControlTemplate.Triggers>
    					<Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Background" TargetName="Bd" Value="{StaticResource {x:Static SystemColors.ControlBrushKey}}"/>
    					</Trigger>
    					<Trigger Property="IsGrouping" Value="true">
    						<Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
    					</Trigger>
    				</ControlTemplate.Triggers>
    			</ControlTemplate>
    		</Setter.Value>
    	</Setter>
    </Style>
    <Style x:Key="TreeViewStyle1" TargetType="{x:Type TreeView}">
        <Setter Property="Background" Value="{StaticResource {x:Static SystemColors.WindowBrushKey}}"/>
    	<Setter Property="BorderBrush" Value="{StaticResource ListBorder}"/>
    	<Setter Property="BorderThickness" Value="1"/>
    	<Setter Property="Padding" Value="1"/>
        <Setter Property="Foreground" Value="{StaticResource {x:Static SystemColors.ControlTextBrushKey}}"/>
    	<Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
    	<Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
    	<Setter Property="ScrollViewer.PanningMode" Value="Both"/>
    	<Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
    	<Setter Property="VerticalContentAlignment" Value="Center"/>
    	<Setter Property="Template">
    		<Setter.Value>
    			<ControlTemplate TargetType="{x:Type TreeView}">
    				<Border x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="true">
    					<ScrollViewer x:Name="_tv_scrollviewer_" Background="{TemplateBinding Background}" CanContentScroll="false" Focusable="false" HorizontalScrollBarVisibility="{TemplateBinding ScrollViewer.HorizontalScrollBarVisibility}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalScrollBarVisibility="{TemplateBinding ScrollViewer.VerticalScrollBarVisibility}">
    						<ItemsPresenter/>
    					</ScrollViewer>
    				</Border>
    				<ControlTemplate.Triggers>
    					<Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Background" TargetName="Bd" Value="{StaticResource {x:Static SystemColors.ControlBrushKey}}"/>
    					</Trigger>
    					<Trigger Property="VirtualizingStackPanel.IsVirtualizing" Value="true">
    						<Setter Property="CanContentScroll" TargetName="_tv_scrollviewer_" Value="true"/>
    					</Trigger>
    				</ControlTemplate.Triggers>
    			</ControlTemplate>
    		</Setter.Value>
    	</Setter>
    	<Style.Triggers>
    		<Trigger Property="VirtualizingStackPanel.IsVirtualizing" Value="true">
    			<Setter Property="ItemsPanel">
    				<Setter.Value>
    					<ItemsPanelTemplate>
    						<VirtualizingStackPanel/>
    					</ItemsPanelTemplate>
    				</Setter.Value>
    			</Setter>
    		</Trigger>
    	</Style.Triggers>
    </Style>
    <Style x:Key="TreeViewItemFocusVisual">
    	<Setter Property="Control.Template">
    		<Setter.Value>
    			<ControlTemplate>
    				<Rectangle/>
    			</ControlTemplate>
    		</Setter.Value>
    	</Setter>
    </Style>
    <PathGeometry x:Key="TreeArrow" Figures="M0,0 L0,6 L6,0 z"/>
    <Style x:Key="ExpandCollapseToggleStyle" TargetType="{x:Type ToggleButton}">
    	<Setter Property="Focusable" Value="False"/>
    	<Setter Property="Width" Value="16"/>
    	<Setter Property="Height" Value="16"/>
    	<Setter Property="Template">
    		<Setter.Value>
    			<ControlTemplate TargetType="{x:Type ToggleButton}">
    				<Border Background="Transparent" Height="16" Padding="5,5,5,5" Width="16">
    					<Path x:Name="ExpandPath" Data="{StaticResource TreeArrow}" Fill="#FF323232" Stroke="{x:Null}">
    						<Path.RenderTransform>
    							<RotateTransform Angle="135" CenterY="3" CenterX="3"/>
    						</Path.RenderTransform>
    					</Path>
    				</Border>
    			</ControlTemplate>
    		</Setter.Value>
    	</Setter>
    </Style>
    <Style x:Key="TreeViewItemStyle1" TargetType="{x:Type TreeViewItem}">
    	<Setter Property="Background" Value="Transparent"/>
    	<Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
    	<Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
    	<Setter Property="Padding" Value="1,0,0,0"/>
    	<Setter Property="Foreground" Value="#323232"/>
    	<Setter Property="FocusVisualStyle" Value="{StaticResource TreeViewItemFocusVisual}"/>
    	<Setter Property="FontSize" Value="16"/>
		<Setter Property="Template">
    		<Setter.Value>
    			<ControlTemplate TargetType="{x:Type TreeViewItem}">
    				<Grid>
    					<Grid.ColumnDefinitions>
    						<ColumnDefinition MinWidth="19" Width="Auto"/>
    						<ColumnDefinition Width="Auto"/>
    						<ColumnDefinition Width="*"/>
    					</Grid.ColumnDefinitions>
    					<Grid.RowDefinitions>
    						<RowDefinition Height="Auto"/>
    						<RowDefinition/>
    					</Grid.RowDefinitions>
    					<Border x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Grid.Column="0" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="true" Height="32" Background="#00EB7700" CornerRadius="4" Grid.ColumnSpan="3" d:LayoutOverrides="GridBox">
    						<ContentPresenter x:Name="PART_Header" ContentSource="Header" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="Center" Margin="30,0,0,0"/>
    					</Border>
    					<ToggleButton x:Name="Expander" ClickMode="Press" IsChecked="{Binding IsExpanded, RelativeSource={RelativeSource TemplatedParent}}" Style="{StaticResource ExpandCollapseToggleStyle}"/>
    					<ItemsPresenter x:Name="ItemsHost" Grid.ColumnSpan="2" Grid.Column="1" Grid.Row="1"/>
    				</Grid>
    				<ControlTemplate.Triggers>
    					<Trigger Property="IsExpanded" Value="false">
    						<Setter Property="Visibility" TargetName="ItemsHost" Value="Collapsed"/>
    					</Trigger>
    					<Trigger Property="HasItems" Value="false">
    						<Setter Property="Visibility" TargetName="Expander" Value="Hidden"/>
    					</Trigger>
    					<Trigger Property="IsSelected" Value="true">
    						<Setter Property="Foreground" Value="#ffffff"/>
    						<Setter Property="Background" TargetName="Bd" Value="#FFEB7700"/>
    					</Trigger>
    					<MultiTrigger>
    						<MultiTrigger.Conditions>
    							<Condition Property="IsSelected" Value="true"/>
    							<Condition Property="IsSelectionActive" Value="false"/>
    						</MultiTrigger.Conditions>
                            <Setter Property="Background" TargetName="Bd" Value="{StaticResource {x:Static SystemColors.ControlBrushKey}}"/>
                            <Setter Property="Foreground" Value="{StaticResource {x:Static SystemColors.ControlTextBrushKey}}"/>
    					</MultiTrigger>
    					<Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{StaticResource {x:Static SystemColors.GrayTextBrushKey}}"/>
    					</Trigger>
    				</ControlTemplate.Triggers>
    			</ControlTemplate>
    		</Setter.Value>
    	</Setter>
    	<Style.Triggers>
    		<Trigger Property="VirtualizingStackPanel.IsVirtualizing" Value="true">
    			<Setter Property="ItemsPanel">
    				<Setter.Value>
    					<ItemsPanelTemplate>
    						<VirtualizingStackPanel/>
    					</ItemsPanelTemplate>
    				</Setter.Value>
    			</Setter>
    		</Trigger>
    	</Style.Triggers>
    </Style>
   
    
	
	<Style x:Key="ListViewItemStyle1" TargetType="{x:Type ListViewItem}">
    	<Setter Property="Background" Value="Transparent"/>
    	<Setter Property="HorizontalContentAlignment" Value="Left"/>
    	<Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Foreground" Value="#323232"/>
    	<Setter Property="Margin" Value="0"/>
    	<Setter Property="Height" Value="32"/>
    	<Setter Property="FontSize" Value="16"/>

    	<Setter Property="Template">
    		<Setter.Value>
    			<ControlTemplate TargetType="{x:Type ListViewItem}">
    				<ControlTemplate.Resources>
    					<Storyboard x:Key="Storyboard1">
    						<ColorAnimationUsingKeyFrames BeginTime="0" Storyboard.TargetProperty="(Panel.Background).(GradientBrush.GradientStops)[0].(GradientStop.Color)" Storyboard.TargetName="border">
    							<SplineColorKeyFrame KeyTime="0:0:0.2" Value="#99FFFFFF"/>
    						</ColorAnimationUsingKeyFrames>
    						<ColorAnimationUsingKeyFrames BeginTime="0" Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)" Storyboard.TargetName="border">
    							<SplineColorKeyFrame KeyTime="0:0:0.2" Value="White"/>
    						</ColorAnimationUsingKeyFrames>
    					</Storyboard>
    					<Storyboard x:Key="Storyboard2">
    						<ColorAnimationUsingKeyFrames BeginTime="0" Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)" Storyboard.TargetName="border">
    							<SplineColorKeyFrame KeyTime="0:0:0.2" Value="Transparent"/>
    						</ColorAnimationUsingKeyFrames>
    						<ColorAnimationUsingKeyFrames BeginTime="0" Storyboard.TargetProperty="(Panel.Background).(GradientBrush.GradientStops)[0].(GradientStop.Color)" Storyboard.TargetName="border">
    							<SplineColorKeyFrame KeyTime="0:0:0.2" Value="Transparent"/>
    						</ColorAnimationUsingKeyFrames>
    					</Storyboard>
    				</ControlTemplate.Resources>
    				<Grid x:Name="Button_Normal" Height="Auto" Opacity="1" RenderTransformOrigin="0.5,0.5" Width="Auto">
    					<Grid.RenderTransform>
    						<ScaleTransform ScaleY="1" ScaleX="1"/>
    					</Grid.RenderTransform>
    					<Border x:Name="border" BorderBrush="Transparent" BorderThickness="1" Background="#FFEB7700">
    						<!--<ContentPresenter Margin="10,0,0,0" VerticalAlignment="Center"/>-->
    					</Border>
    					<GridViewRowPresenter Columns="{TemplateBinding GridView.ColumnCollection}" Content="{TemplateBinding Content}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
    				</Grid>
    				<ControlTemplate.Triggers>
    					<Trigger Property="IsMouseOver" Value="True"/>
    					<Trigger Property="IsSelected" Value="True"/>
    				</ControlTemplate.Triggers>
    			</ControlTemplate>
    		</Setter.Value>
    	</Setter>
    </Style>
	<Style x:Key="ListBoxItemStyle_SubNavigation" TargetType="{x:Type ListBoxItem}">
		<Setter Property="Background" Value="Transparent"/>
		<Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
		<Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
		<Setter Property="Padding" Value="2,0,0,0"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type ListBoxItem}">
					<Grid Height="45" Background="#00000000">
						<Border x:Name="border" BorderThickness="3" CornerRadius="22" Grid.ColumnSpan="1" Visibility="Hidden">
							<Border.BorderBrush>
								<LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
									<GradientStop Color="#FFC48829" Offset="0"/>
									<GradientStop Color="#FFFEF5D7" Offset="1"/>
								</LinearGradientBrush>
							</Border.BorderBrush>
							<Border.Background>
								<LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
									<GradientStop Color="#FFFD6900" Offset="0"/>
									<GradientStop Color="#FFFF8B00" Offset="1"/>
								</LinearGradientBrush>
							</Border.Background>
						</Border>
						<Grid x:Name="RadioButton" Height="Auto" Visibility="Hidden" Margin="3">
							<Grid.ColumnDefinitions>
								<ColumnDefinition Width="25"/>
								<ColumnDefinition/>
								<ColumnDefinition Width="25"/>
							</Grid.ColumnDefinitions>
							<Image Source="/SoonLearning.AppCenter;component/Resources/Images/btn_Shadow_01.png" Stretch="Fill"/>
							<Image Margin="0" Source="/SoonLearning.AppCenter;component/Resources/Images/btn_Shadow_02.png" Stretch="Fill" Grid.Column="1" Width="Auto"/>
							<Image Source="/SoonLearning.AppCenter;component/Resources/Images/btn_Shadow_03.png" Stretch="Fill" Grid.Column="2"/>
    				
						</Grid>
						<TextBlock x:Name="contentPresenter" 
							       HorizontalAlignment="Left" 
							       VerticalAlignment="Center" 
							       RenderTransformOrigin="0.5,0.5"
							       Text="{Binding Title}" 
                                   Style="{StaticResource TextBlockStyle_Head2_NoShadow}" Foreground="{StaticResource Brush_ListItem_Selected}"
							       MaxWidth="{TemplateBinding Width}" FontWeight="Bold" Margin="40,0,40,2" Grid.Column="1">

							<TextBlock.Effect>
								<DropShadowEffect ShadowDepth="1" Direction="270" Opacity="0.7" Color="White"/>
							</TextBlock.Effect>
						</TextBlock>
					</Grid>
					<ControlTemplate.Triggers>
						<Trigger Property="IsSelected" Value="true">
                            <Setter Property="Foreground" Value="{StaticResource {x:Static SystemColors.HighlightTextBrushKey}}"/>
							<Setter Property="Foreground" TargetName="contentPresenter" Value="White"/>
							<Setter Property="Visibility" TargetName="border" Value="Visible"/>
							<Setter Property="Visibility" TargetName="RadioButton" Value="Visible"/>
							<Setter Property="Effect" TargetName="contentPresenter">
								<Setter.Value>
                                    <DropShadowEffect Color="Black" Direction="270" Opacity="0.5" ShadowDepth="1" />
								</Setter.Value>
							</Setter>
						</Trigger>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="IsSelected" Value="true"/>
								<Condition Property="Selector.IsSelectionActive" Value="false"/>
							</MultiTrigger.Conditions>
                            <Setter Property="Foreground" Value="{StaticResource {x:Static SystemColors.ControlTextBrushKey}}"/>
						</MultiTrigger>
						<Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{StaticResource {x:Static SystemColors.GrayTextBrushKey}}"/>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style x:Key="ListBoxItemStyle_SubNavigation2" TargetType="{x:Type ListBoxItem}">
		<Setter Property="Background" Value="Transparent"/>
		<Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
		<Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
		<Setter Property="Padding" Value="2,0,0,0"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type ListBoxItem}">
					<Grid Height="40" Background="#00000000">
						<Border x:Name="border" BorderThickness="0" CornerRadius="20" Grid.ColumnSpan="1" Visibility="Hidden">
							<Border.BorderBrush>
								<LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
									<GradientStop Color="#FF4E3205" Offset="0.004"/>
									<GradientStop Color="#FFC46D24" Offset="1"/>
								</LinearGradientBrush>
							</Border.BorderBrush>
							<Border.Background>
								<LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
									<GradientStop Color="#FFFD6900" Offset="0"/>
									<GradientStop Color="#FFFF8B00" Offset="1"/>
								</LinearGradientBrush>
							</Border.Background>
						</Border>
						<Grid x:Name="RadioButton" Height="Auto" Visibility="Hidden" Margin="0">
							<Grid.ColumnDefinitions>
								<ColumnDefinition Width="25"/>
								<ColumnDefinition/>
								<ColumnDefinition Width="25"/>
							</Grid.ColumnDefinitions>
							<Image Source="/SoonLearning.AppCenter;component/Resources/Images/btn_Shadow_01.png" Stretch="Fill"/>
							<Image Margin="0" Source="/SoonLearning.AppCenter;component/Resources/Images/btn_Shadow_02.png" Stretch="Fill" Grid.Column="1" Width="Auto"/>
							<Image Source="/SoonLearning.AppCenter;component/Resources/Images/btn_Shadow_03.png" Stretch="Fill" Grid.Column="2"/>
    				
						</Grid>
						<TextBlock x:Name="contentPresenter" 
							HorizontalAlignment="Left" 
							VerticalAlignment="Center" 
							RenderTransformOrigin="0.5,0.5"
							Text="{Binding Title}" 
							Style="{StaticResource TextBlockStyle_Head2_NoShadow}" Foreground="White"
							MaxWidth="{TemplateBinding Width}" FontWeight="Bold" Margin="40,0,40,2" Grid.Column="1">

							<TextBlock.Effect>
								<DropShadowEffect ShadowDepth="1" Direction="270" Opacity="0.7"/>
							</TextBlock.Effect>
						</TextBlock>
					</Grid>
					<ControlTemplate.Triggers>
						<Trigger Property="IsSelected" Value="true">
                            <Setter Property="Foreground" Value="{StaticResource {x:Static SystemColors.HighlightTextBrushKey}}"/>
							<Setter Property="Foreground" TargetName="contentPresenter" Value="White"/>
							<Setter Property="Visibility" TargetName="border" Value="Visible"/>
							<Setter Property="Visibility" TargetName="RadioButton" Value="Visible"/>
							<Setter Property="Effect" TargetName="contentPresenter">
								<Setter.Value>
                                    <DropShadowEffect Color="Black" Direction="270" Opacity="0.5" ShadowDepth="1" />
								</Setter.Value>
							</Setter>
						</Trigger>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="IsSelected" Value="true"/>
								<Condition Property="Selector.IsSelectionActive" Value="false"/>
							</MultiTrigger.Conditions>
                            <Setter Property="Foreground" Value="{StaticResource {x:Static SystemColors.ControlTextBrushKey}}"/>
						</MultiTrigger>
						<Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{StaticResource {x:Static SystemColors.GrayTextBrushKey}}"/>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style x:Key="FlowDocumentScrollViewerStyle1" TargetType="{x:Type FlowDocumentScrollViewer}">
		<Setter Property="Foreground" Value="White"/>
		<Setter Property="Background" Value="Transparent"/>
        <Setter Property="ContextMenu" Value="{StaticResource {ComponentResourceKey ResourceId=PUIFlowViewers_ContextMenu, TypeInTargetAssembly={x:Type System_Windows_Documents:PresentationUIStyleResources}}}"/>
		<Setter Property="HorizontalContentAlignment" Value="Stretch"/>
		<Setter Property="VerticalContentAlignment" Value="Stretch"/>
		<Setter Property="KeyboardNavigation.TabNavigation" Value="Local"/>
        <Setter Property="FontFamily" Value="/Resources/迷你简卡通.TTF#迷你简卡通" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type FlowDocumentScrollViewer}">
					<Grid Language="zh-cn" Uid="Grid_26">
						<Grid.RowDefinitions>
							<RowDefinition Height="*"/>
							<RowDefinition Height="Auto"/>
						</Grid.RowDefinitions>
						<Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Margin="{TemplateBinding Padding}" Uid="Border_49">
                            <ScrollViewer x:Name="PART_ContentHost" CanContentScroll="True" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Uid="ScrollViewer_8" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Template="{StaticResource ScrollViewerControlTemplate2}"/>
						</Border>
						<Border x:Name="PART_ToolBarHost" Background="{TemplateBinding Background}" Grid.Row="1" Uid="Border_51">
							<Grid Uid="Grid_34">
								<Grid.ColumnDefinitions>
									<ColumnDefinition Width="*"/>
									<ColumnDefinition Width="*"/>
								</Grid.ColumnDefinitions>
								<Border x:Name="PART_FindToolBarHost" Grid.Column="0" HorizontalAlignment="Left" Uid="Border_61" Visibility="Collapsed" VerticalAlignment="Center"/>
								<Grid Grid.Column="1" HorizontalAlignment="Right" Uid="Grid_27" VerticalAlignment="Center">
									<Grid.ColumnDefinitions>
										<ColumnDefinition Width="Auto"/>
										<ColumnDefinition/>
										<ColumnDefinition Width="Auto"/>
									</Grid.ColumnDefinitions>
									<RepeatButton BorderBrush="{TemplateBinding BorderBrush}" Grid.Column="0" Command="NavigationCommands.DecreaseZoom" Foreground="{TemplateBinding Foreground}" Height="{TemplateBinding FontSize}" IsEnabled="{TemplateBinding CanDecreaseZoom}" ToolTip="减小缩放比例" Uid="RepeatButton_7" Width="{TemplateBinding FontSize}">
										<RepeatButton.LayoutTransform>
											<ScaleTransform ScaleY="2.2" ScaleX="2.2"/>
										</RepeatButton.LayoutTransform>
										<RepeatButton.Style>
											<Style TargetType="{x:Type RepeatButton}">
												<Setter Property="Padding" Value="2,2,0,2"/>
												<Setter Property="Template">
													<Setter.Value>
														<ControlTemplate TargetType="{x:Type RepeatButton}">
															<Border Background="Transparent" Padding="{Binding Padding, RelativeSource={RelativeSource TemplatedParent}}" Uid="Border_41">
																<Viewbox x:Name="Content" RenderTransformOrigin="0.5,0.5" Uid="Viewbox_2">
																	<Canvas Height="32" Uid="Canvas_4" Width="32">
																		<Path Fill="{Binding Background, RelativeSource={RelativeSource TemplatedParent}}" Height="32" Uid="Path_7" Width="32">
																			<Path.Data>
																				<GeometryGroup>
																					<EllipseGeometry Center="16,16" RadiusY="16" RadiusX="16"/>
																				</GeometryGroup>
																			</Path.Data>
																		</Path>
																		<Path x:Name="Sheen" Height="32" Uid="Path_8" Width="32">
																			<Path.Data>
																				<GeometryGroup>
																					<EllipseGeometry Center="16,16" RadiusY="16" RadiusX="16"/>
																				</GeometryGroup>
																			</Path.Data>
																			<Path.Fill>
																				<LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
																					<GradientStop Color="#99FFFFFF" Offset="0"/>
																					<GradientStop Color="#66000000" Offset="1"/>
																				</LinearGradientBrush>
																			</Path.Fill>
																		</Path>
																		<Path Canvas.Left="16" Stroke="{Binding Foreground, RelativeSource={RelativeSource TemplatedParent}}" StrokeThickness="5" Canvas.Top="16" Uid="Path_9">
																			<Path.Data>
																				<LineGeometry EndPoint="10,0" StartPoint="-10,0"/>
																			</Path.Data>
																		</Path>
																	</Canvas>
																</Viewbox>
															</Border>
															<ControlTemplate.Triggers>
																<Trigger Property="IsMouseOver" Value="True">
																	<Setter Property="RenderTransform" TargetName="Content">
																		<Setter.Value>
																			<ScaleTransform ScaleY="1.1" ScaleX="1.1"/>
																		</Setter.Value>
																	</Setter>
																</Trigger>
																<Trigger Property="IsPressed" Value="True">
																	<Setter Property="RenderTransform" TargetName="Content">
																		<Setter.Value>
																			<ScaleTransform ScaleY="1" ScaleX="1"/>
																		</Setter.Value>
																	</Setter>
																	<Setter Property="Fill" TargetName="Sheen">
																		<Setter.Value>
																			<LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
																				<GradientStop Color="#99000000" Offset="0"/>
																				<GradientStop Color="#66FFFFFF" Offset="1"/>
																			</LinearGradientBrush>
																		</Setter.Value>
																	</Setter>
																</Trigger>
															</ControlTemplate.Triggers>
														</ControlTemplate>
													</Setter.Value>
												</Setter>
												<Style.BasedOn>
													<Style TargetType="{x:Type RepeatButton}">
														<Setter Property="Padding" Value="5"/>
														<Setter Property="Delay" Value="1000"/>
														<Setter Property="Interval" Value="250"/>
														<Style.BasedOn>
															<Style TargetType="{x:Type ButtonBase}">
																<Setter Property="Focusable" Value="False"/>
																<Setter Property="Opacity" Value="0.5"/>
																<Setter Property="Cursor" Value="Hand"/>
																<Setter Property="Background" Value="Transparent"/>
																<Setter Property="Padding" Value="3,1"/>
																<Setter Property="BorderBrush" Value="{x:Null}"/>
																<Setter Property="BorderThickness" Value="0"/>
																<Setter Property="MinWidth" Value="0"/>
																<Setter Property="MinHeight" Value="0"/>
																<Setter Property="Template">
																	<Setter.Value>
																		<ControlTemplate TargetType="{x:Type ButtonBase}">
																			<Border Background="{TemplateBinding Background}" Uid="Border_39">
																				<ContentPresenter x:Name="Content" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" RenderTransformOrigin="0.5,0.5" Uid="ContentPresenter_2"/>
																			</Border>
																			<ControlTemplate.Triggers>
																				<Trigger Property="IsMouseOver" Value="True">
																					<Setter Property="RenderTransform" TargetName="Content">
																						<Setter.Value>
																							<ScaleTransform ScaleY="1.1" ScaleX="1.1"/>
																						</Setter.Value>
																					</Setter>
																				</Trigger>
																				<Trigger Property="IsPressed" Value="True">
																					<Setter Property="RenderTransform" TargetName="Content">
																						<Setter.Value>
																							<ScaleTransform ScaleY="0.9" ScaleX="0.9"/>
																						</Setter.Value>
																					</Setter>
																				</Trigger>
																			</ControlTemplate.Triggers>
																		</ControlTemplate>
																	</Setter.Value>
																</Setter>
																<Style.Triggers>
																	<Trigger Property="IsEnabled" Value="False">
																		<Setter Property="Opacity" Value="0.3"/>
																	</Trigger>
																	<Trigger Property="IsMouseOver" Value="True">
																		<Setter Property="Opacity" Value="1"/>
																	</Trigger>
																</Style.Triggers>
															</Style>
														</Style.BasedOn>
													</Style>
												</Style.BasedOn>
											</Style>
										</RepeatButton.Style>
									</RepeatButton>
									<Slider Grid.Column="1" FontSize="{TemplateBinding FontSize}" HorizontalAlignment="Stretch" LargeChange="{TemplateBinding ZoomIncrement}" Maximum="{TemplateBinding MaxZoom}" Minimum="{TemplateBinding MinZoom}" SmallChange="{TemplateBinding ZoomIncrement}" TickFrequency="{TemplateBinding ZoomIncrement}" Uid="Slider_2" Value="{Binding Zoom, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" VerticalAlignment="Center" Width="100">
										<Slider.Style>
											<Style TargetType="{x:Type Slider}">
												<Setter Property="Stylus.IsPressAndHoldEnabled" Value="False"/>
												<Setter Property="Focusable" Value="False"/>
												<Setter Property="OverridesDefaultStyle" Value="True"/>
												<Setter Property="Background" Value="{Binding Background, RelativeSource={RelativeSource TemplatedParent}}"/>
												<Setter Property="BorderThickness" Value="1"/>
												<Setter Property="BorderBrush" Value="#00000000"/>
												<Setter Property="Foreground" Value="{Binding Foreground, RelativeSource={RelativeSource TemplatedParent}}"/>
												<Setter Property="IsSnapToTickEnabled" Value="True"/>
												<Setter Property="RenderTransformOrigin" Value="0.5,0.5"/>
												<Setter Property="MinWidth" Value="50"/>
												<Setter Property="MinHeight" Value="0"/>
												<Setter Property="Width" Value="Auto"/>
												<Setter Property="Padding" Value="2,0"/>
												<Setter Property="Height" Value="Auto"/>
												<Setter Property="Opacity" Value="0.75"/>
												<Setter Property="Delay" Value="1000"/>
												<Setter Property="Interval" Value="250"/>
												<Setter Property="Template">
													<Setter.Value>
														<ControlTemplate TargetType="{x:Type Slider}">
															<Border Background="Transparent" Padding="{TemplateBinding Padding}" Uid="Border_45">
																<Grid ClipToBounds="False" Uid="Grid_22">
																	<Grid.ColumnDefinitions>
																		<ColumnDefinition Width="*"/>
																	</Grid.ColumnDefinitions>
																	<Grid.RowDefinitions>
																		<RowDefinition Height="Auto"/>
																		<RowDefinition Height="Auto" MinHeight="{TemplateBinding MinHeight}"/>
																		<RowDefinition Height="Auto"/>
																		<RowDefinition Height="*"/>
																	</Grid.RowDefinitions>
																	<TickBar x:Name="TopTick" Fill="{TemplateBinding Foreground}" Height="4" Placement="Top" Grid.Row="0" Uid="TickBar_1" Visibility="Collapsed"/>
																	<Border Background="{TemplateBinding Foreground}" CornerRadius="2" Height="2" Opacity="0.5" Grid.Row="1" Uid="Border_46"/>
																	<Canvas Height="4" Grid.Row="1" Uid="Canvas_7" VerticalAlignment="Center">
																		<Rectangle x:Name="PART_SelectionRange" Fill="{TemplateBinding Foreground}" Height="2" Canvas.Top="1" Uid="Rectangle_17" Visibility="Hidden"/>
																	</Canvas>
																	<Track x:Name="PART_Track" Grid.Row="1" Uid="PART_Track">
																		<Track.DecreaseRepeatButton>
																			<RepeatButton Command="Slider.DecreaseLarge" Uid="RepeatButton_1">
																				<RepeatButton.Style>
																					<Style TargetType="{x:Type RepeatButton}">
																						<Setter Property="OverridesDefaultStyle" Value="True"/>
																						<Setter Property="IsTabStop" Value="False"/>
																						<Setter Property="Focusable" Value="False"/>
																						<Setter Property="Template">
																							<Setter.Value>
																								<ControlTemplate TargetType="{x:Type RepeatButton}">
																									<Border Background="Transparent" Uid="Border_43"/>
																								</ControlTemplate>
																							</Setter.Value>
																						</Setter>
																					</Style>
																				</RepeatButton.Style>
																			</RepeatButton>
																		</Track.DecreaseRepeatButton>
																		<Track.IncreaseRepeatButton>
																			<RepeatButton Command="Slider.IncreaseLarge" Uid="RepeatButton_2">
																				<RepeatButton.Style>
																					<Style TargetType="{x:Type RepeatButton}">
																						<Setter Property="OverridesDefaultStyle" Value="True"/>
																						<Setter Property="IsTabStop" Value="False"/>
																						<Setter Property="Focusable" Value="False"/>
																						<Setter Property="Template">
																							<Setter.Value>
																								<ControlTemplate TargetType="{x:Type RepeatButton}">
																									<Border Background="Transparent" Uid="Border_43"/>
																								</ControlTemplate>
																							</Setter.Value>
																						</Setter>
																					</Style>
																				</RepeatButton.Style>
																			</RepeatButton>
																		</Track.IncreaseRepeatButton>
																		<Track.Thumb>
																			<Thumb Background="{TemplateBinding Background}" Uid="Thumb_5">
																				<Thumb.Style>
																					<Style TargetType="{x:Type Thumb}">
																						<Setter Property="Background" Value="{Binding Background, RelativeSource={RelativeSource TemplatedParent}}"/>
																						<Setter Property="Focusable" Value="False"/>
																						<Setter Property="OverridesDefaultStyle" Value="True"/>
																						<Setter Property="Cursor" Value="Hand"/>
																						<Setter Property="Padding" Value="6"/>
																						<Setter Property="Template">
																							<Setter.Value>
																								<ControlTemplate TargetType="{x:Type Thumb}">
																									<Border Background="Transparent" Margin="-2" Padding="{Binding Padding, RelativeSource={RelativeSource TemplatedParent}}" Uid="Border_44">
																										<Viewbox HorizontalAlignment="Center" Uid="Viewbox_4" VerticalAlignment="Center" Width="{Binding FontSize, RelativeSource={RelativeSource TemplatedParent}}">
																											<Viewbox.LayoutTransform>
																												<ScaleTransform ScaleY="1" ScaleX="1"/>
																											</Viewbox.LayoutTransform>
																											<Canvas Height="17" Uid="Canvas_6" Width="13">
																												<Path Data="F1 M1,0 L10,0 L11,1 L11,13 L6.5,17 L4.5,17 L0,13 L0,1 L1,0 z" Fill="{Binding Foreground, RelativeSource={RelativeSource TemplatedParent}}" Uid="Path_13"/>
																												<Path Data="F1 M1,0 L10,0 L11,1 L11,13 L6.5,17 L4.5,17 L0,13 L0,1 L1,0 z" StrokeEndLineCap="Round" StrokeDashCap="Round" Stroke="{TemplateBinding Background}" StrokeThickness="0.75" StrokeMiterLimit="1" StrokeLineJoin="Round" Uid="Path_14">
																													<Path.Fill>
																														<LinearGradientBrush EndPoint="1,0.5" StartPoint="0,0.5">
																															<LinearGradientBrush.RelativeTransform>
																																<TransformGroup>
																																	<TranslateTransform X="-0.5" Y="-0.5"/>
																																	<ScaleTransform ScaleY="1" ScaleX="1"/>
																																	<SkewTransform AngleY="0" AngleX="0"/>
																																	<RotateTransform Angle="110"/>
																																	<TranslateTransform X="0.5" Y="0.5"/>
																																</TransformGroup>
																															</LinearGradientBrush.RelativeTransform>
																															<GradientStop Color="#CC999999" Offset="0.5"/>
																															<GradientStop Color="#CCFFFFFF" Offset="0.8"/>
																															<GradientStop Color="#CCFFFFFF" Offset="0.2"/>
																														</LinearGradientBrush>
																													</Path.Fill>
																												</Path>
																											</Canvas>
																										</Viewbox>
																									</Border>
																								</ControlTemplate>
																							</Setter.Value>
																						</Setter>
																					</Style>
																				</Thumb.Style>
																			</Thumb>
																		</Track.Thumb>
																	</Track>
																	<TickBar x:Name="BottomTick" Fill="{TemplateBinding Foreground}" Height="4" Placement="Bottom" Grid.Row="2" Uid="TickBar_2" Visibility="Collapsed"/>
																</Grid>
															</Border>
															<ControlTemplate.Triggers>
																<Trigger Property="TickPlacement" Value="TopLeft">
																	<Setter Property="Visibility" TargetName="TopTick" Value="Visible"/>
																</Trigger>
																<Trigger Property="TickPlacement" Value="BottomRight">
																	<Setter Property="Visibility" TargetName="BottomTick" Value="Visible"/>
																</Trigger>
																<Trigger Property="TickPlacement" Value="Both">
																	<Setter Property="Visibility" TargetName="TopTick" Value="Visible"/>
																	<Setter Property="Visibility" TargetName="BottomTick" Value="Visible"/>
																</Trigger>
																<Trigger Property="IsSelectionRangeEnabled" Value="True">
																	<Setter Property="Visibility" TargetName="PART_SelectionRange" Value="Visible"/>
																</Trigger>
																<Trigger Property="IsMouseOver" Value="True">
																	<Setter Property="RenderTransform">
																		<Setter.Value>
																			<ScaleTransform ScaleY="1.05" ScaleX="1.05"/>
																		</Setter.Value>
																	</Setter>
																</Trigger>
																<Trigger Property="IsMouseOver" Value="True">
																	<Setter Property="Opacity" Value="1"/>
																	<Setter Property="RenderTransform">
																		<Setter.Value>
																			<ScaleTransform ScaleY="1.05" ScaleX="1.05"/>
																		</Setter.Value>
																	</Setter>
																</Trigger>
																<Trigger Property="IsEnabled" Value="False">
																	<Setter Property="Opacity" Value="0.3"/>
																</Trigger>
															</ControlTemplate.Triggers>
														</ControlTemplate>
													</Setter.Value>
												</Setter>
											</Style>
										</Slider.Style>
									</Slider>
									<RepeatButton BorderBrush="{TemplateBinding BorderBrush}" Grid.Column="2" Command="NavigationCommands.IncreaseZoom" Foreground="{TemplateBinding Foreground}" Height="{TemplateBinding FontSize}" IsEnabled="{TemplateBinding CanIncreaseZoom}" ToolTip="增大缩放比例" Uid="RepeatButton_8" Width="{TemplateBinding FontSize}">
										<RepeatButton.LayoutTransform>
											<ScaleTransform ScaleY="2.2" ScaleX="2.2"/>
										</RepeatButton.LayoutTransform>
										<RepeatButton.Style>
											<Style TargetType="{x:Type RepeatButton}">
												<Setter Property="Padding" Value="0,2,2,2"/>
												<Setter Property="Template">
													<Setter.Value>
														<ControlTemplate TargetType="{x:Type RepeatButton}">
															<Border Background="Transparent" Padding="{Binding Padding, RelativeSource={RelativeSource TemplatedParent}}" Uid="Border_42">
																<Viewbox x:Name="Content" RenderTransformOrigin="0.5,0.5" Uid="Viewbox_3">
																	<Canvas Height="32" Uid="Canvas_5" Width="32">
																		<Path Fill="{Binding Background, RelativeSource={RelativeSource TemplatedParent}}" Height="32" Uid="Path_10" Width="32">
																			<Path.Data>
																				<GeometryGroup>
																					<EllipseGeometry Center="16,16" RadiusY="16" RadiusX="16"/>
																				</GeometryGroup>
																			</Path.Data>
																		</Path>
																		<Path x:Name="Sheen" Height="32" Uid="Path_11" Width="32">
																			<Path.Data>
																				<GeometryGroup>
																					<EllipseGeometry Center="16,16" RadiusY="16" RadiusX="16"/>
																				</GeometryGroup>
																			</Path.Data>
																			<Path.Fill>
																				<LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
																					<GradientStop Color="#99FFFFFF" Offset="0"/>
																					<GradientStop Color="#66000000" Offset="1"/>
																				</LinearGradientBrush>
																			</Path.Fill>
																		</Path>
																		<Path Canvas.Left="16" Stroke="{Binding Foreground, RelativeSource={RelativeSource TemplatedParent}}" StrokeThickness="5" Canvas.Top="16" Uid="Path_12">
																			<Path.Data>
																				<GeometryGroup>
																					<LineGeometry EndPoint="10,0" StartPoint="-10,0"/>
																					<LineGeometry EndPoint="0,10" StartPoint="0,-10"/>
																				</GeometryGroup>
																			</Path.Data>
																		</Path>
																	</Canvas>
																</Viewbox>
															</Border>
															<ControlTemplate.Triggers>
																<Trigger Property="IsMouseOver" Value="True">
																	<Setter Property="RenderTransform" TargetName="Content">
																		<Setter.Value>
																			<ScaleTransform ScaleY="1.1" ScaleX="1.1"/>
																		</Setter.Value>
																	</Setter>
																</Trigger>
																<Trigger Property="IsPressed" Value="True">
																	<Setter Property="RenderTransform" TargetName="Content">
																		<Setter.Value>
																			<ScaleTransform ScaleY="1" ScaleX="1"/>
																		</Setter.Value>
																	</Setter>
																	<Setter Property="Fill" TargetName="Sheen">
																		<Setter.Value>
																			<LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
																				<GradientStop Color="#99000000" Offset="0"/>
																				<GradientStop Color="#66FFFFFF" Offset="1"/>
																			</LinearGradientBrush>
																		</Setter.Value>
																	</Setter>
																</Trigger>
															</ControlTemplate.Triggers>
														</ControlTemplate>
													</Setter.Value>
												</Setter>
												<Style.BasedOn>
													<Style TargetType="{x:Type RepeatButton}">
														<Setter Property="Padding" Value="5"/>
														<Setter Property="Delay" Value="1000"/>
														<Setter Property="Interval" Value="250"/>
														<Style.BasedOn>
															<Style TargetType="{x:Type ButtonBase}">
																<Setter Property="Focusable" Value="False"/>
																<Setter Property="Opacity" Value="0.5"/>
																<Setter Property="Cursor" Value="Hand"/>
																<Setter Property="Background" Value="Transparent"/>
																<Setter Property="Padding" Value="3,1"/>
																<Setter Property="BorderBrush" Value="{x:Null}"/>
																<Setter Property="BorderThickness" Value="0"/>
																<Setter Property="MinWidth" Value="0"/>
																<Setter Property="MinHeight" Value="0"/>
																<Setter Property="Template">
																	<Setter.Value>
																		<ControlTemplate TargetType="{x:Type ButtonBase}">
																			<Border Background="{TemplateBinding Background}" Uid="Border_39">
																				<ContentPresenter x:Name="Content" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" RenderTransformOrigin="0.5,0.5" Uid="ContentPresenter_2"/>
																			</Border>
																			<ControlTemplate.Triggers>
																				<Trigger Property="IsMouseOver" Value="True">
																					<Setter Property="RenderTransform" TargetName="Content">
																						<Setter.Value>
																							<ScaleTransform ScaleY="1.1" ScaleX="1.1"/>
																						</Setter.Value>
																					</Setter>
																				</Trigger>
																				<Trigger Property="IsPressed" Value="True">
																					<Setter Property="RenderTransform" TargetName="Content">
																						<Setter.Value>
																							<ScaleTransform ScaleY="0.9" ScaleX="0.9"/>
																						</Setter.Value>
																					</Setter>
																				</Trigger>
																			</ControlTemplate.Triggers>
																		</ControlTemplate>
																	</Setter.Value>
																</Setter>
																<Style.Triggers>
																	<Trigger Property="IsEnabled" Value="False">
																		<Setter Property="Opacity" Value="0.3"/>
																	</Trigger>
																	<Trigger Property="IsMouseOver" Value="True">
																		<Setter Property="Opacity" Value="1"/>
																	</Trigger>
																</Style.Triggers>
															</Style>
														</Style.BasedOn>
													</Style>
												</Style.BasedOn>
											</Style>
										</RepeatButton.Style>
									</RepeatButton>
								</Grid>
							</Grid>
						</Border>
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	
	<Style x:Key="ListBoxStyle_Popup" TargetType="{x:Type ListBox}">
	
		<Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Foreground" Value="{StaticResource {x:Static SystemColors.ControlTextBrushKey}}"/>
		<Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
		<Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
		<Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
		<Setter Property="ScrollViewer.PanningMode" Value="Both"/>
		<Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
		<Setter Property="VerticalContentAlignment" Value="Center"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type ListBox}">
					<Border x:Name="Bd" BorderThickness="{TemplateBinding BorderThickness}" Padding="1" SnapsToDevicePixels="true">
						<ScrollViewer Focusable="false" Padding="{TemplateBinding Padding}">
							<ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
						</ScrollViewer>
					</Border>
					<ControlTemplate.Triggers>
						<Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Background" TargetName="Bd" Value="{StaticResource {x:Static SystemColors.ControlBrushKey}}"/>
						</Trigger>
						<Trigger Property="IsGrouping" Value="true">
							<Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	









   



</ResourceDictionary>